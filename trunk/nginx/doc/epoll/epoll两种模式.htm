<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head id="Head"><title>epoll学习笔记 - 那谁的技术博客 - C++博客</title>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta id="metaKeywords" name="keywords" content="epoll学习笔记"><link id="MainCss" type="text/css" rel="stylesheet" href="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/style.css"><link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cppblog.com/converse/rss.aspx"><style>
td { font-size: 12px }
.commentTextBox 
{ 
    font-family : Verdana; 
    font-size: 13px;
 }
</style><style>.userData { BEHAVIOR: url(#default#userdata) }
	</style></head><body>
    <form name="Form1" method="post" action="48482.html" onsubmit="javascript:return WebForm_OnSubmit();" id="Form1">
<div>
<input name="__EVENTTARGET" id="__EVENTTARGET" value="" type="hidden">
<input name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" type="hidden">
<input name="__VIEWSTATE" id="__VIEWSTATE" value="" type="hidden">
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['Form1'];
if (!theForm) {
    theForm = document.Form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/WebResource.js" type="text/javascript"></script>

<script language="JavaScript">
									function ctlent(evt,id)
											{
												if(evt.ctrlKey && evt.keyCode == 13)
												{	
													try
													{
														TempSave(id);
													}
													catch(ex)
													{
													}
													finally
													{
													    __doPostBack('AjaxHolder$PostComment$btnSubmit','')
													}
												}
		
												}</script>
												<script language="JavaScript">function SetReplyAuhor(author){document.getElementById('AjaxHolder_PostComment_tbComment').value+="@"+author+"\n";document.getElementById('AjaxHolder_PostComment_tbComment').focus();return false}</script>
<script src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/ScriptResource_002.js" type="text/javascript"></script>
<script src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/ScriptResource.js" type="text/javascript"></script>
<script src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/ScriptResource_003.js" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
//]]>
</script>

        

	<div class="pagelayout">
		
<div class="header">
	<div>
		<a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cppblog.com/converse/">那谁的技术博客</a>
	</div>
	<div>
		
	</div>
</div>
		<div id="leftmenu" class="leftcolumn" style="display: inline;">
			
			
<h1 class="listtitle">导航</h1>
<ul class="list">
			<li class="listitem"><a id="MyLinks1_HomeLink" class="listitem" href="http://www.cppblog.com/">C++博客</a></li>
			<li class="listitem"><a id="MyLinks1_MyHomeLink" href="http://www.cppblog.com/converse/">首页</a>
			</li><li class="listitem"><a id="MyLinks1_NewPostLink" href="http://www.cppblog.com/converse/admin/EditPosts.aspx?opt=1">新随笔</a>
			</li><li class="listitem"><a id="MyLinks1_ContactLink" accesskey="9" class="listitem" href="http://www.cppblog.com/converse/contact.aspx?id=1">联系</a></li>
			<li class="listitem"><a id="MyLinks1_Syndication" class="listitem" href="http://www.cppblog.com/converse/Rss.aspx">聚合</a><a id="MyLinks1_XMLLink" href="http://www.cppblog.com/converse/Rss.aspx"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/xml.gif" style="border-width: 0px;"></a>
			</li><li class="listitem"><a id="MyLinks1_Admin" class="listitem" href="http://www.cppblog.com/converse/admin/EditPosts.aspx">管理</a></li>
</ul>
			<table id="Calendar1_entryCal" class="Cal" title="Calendar" style="border-style: solid; border-width: 1px; border-collapse: collapse;" border="0" cellpadding="0" cellspacing="0">
	<tbody><tr><td colspan="7" style="background-color: Silver;"><table class="CalTitle" style="width: 100%; border-collapse: collapse;" border="0" cellspacing="0">
		<tbody><tr><td class="CalNextPrev" style="width: 15%;"><a href="javascript:__doPostBack('Calendar1$entryCal','V2373')" style="color: Black;" title="Go to the previous month">&lt;</a></td><td style="width: 70%;" align="center">2006年8月</td><td class="CalNextPrev" style="width: 15%;" align="right"><a href="javascript:__doPostBack('Calendar1$entryCal','V2435')" style="color: Black;" title="Go to the next month">&gt;</a></td></tr>
	</tbody></table></td></tr><tr><th class="CalDayHeader" abbr="日" scope="col" align="center">日</th><th class="CalDayHeader" abbr="一" scope="col" align="center">一</th><th class="CalDayHeader" abbr="二" scope="col" align="center">二</th><th class="CalDayHeader" abbr="三" scope="col" align="center">三</th><th class="CalDayHeader" abbr="四" scope="col" align="center">四</th><th class="CalDayHeader" abbr="五" scope="col" align="center">五</th><th class="CalDayHeader" abbr="六" scope="col" align="center">六</th></tr><tr><td class="CalOtherMonthDay" style="width: 14%;" align="center">30</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">31</td><td style="width: 14%;" align="center">1</td><td style="width: 14%;" align="center">2</td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/03.html"><u>3</u></a></td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/04.html"><u>4</u></a></td><td class="CalWeekendDay" style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/05.html"><u>5</u></a></td></tr><tr><td class="CalWeekendDay" style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/06.html"><u>6</u></a></td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/07.html"><u>7</u></a></td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/08.html"><u>8</u></a></td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/09.html"><u>9</u></a></td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/10.html"><u>10</u></a></td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/11.html"><u>11</u></a></td><td class="CalWeekendDay" style="width: 14%;" align="center">12</td></tr><tr><td class="CalWeekendDay" style="width: 14%;" align="center">13</td><td style="width: 14%;" align="center">14</td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/15.html"><u>15</u></a></td><td style="width: 14%;" align="center">16</td><td style="width: 14%;" align="center">17</td><td style="width: 14%;" align="center">18</td><td class="CalWeekendDay" style="width: 14%;" align="center">19</td></tr><tr><td class="CalWeekendDay" style="width: 14%;" align="center">20</td><td style="width: 14%;" align="center">21</td><td style="width: 14%;" align="center">22</td><td style="width: 14%;" align="center">23</td><td style="width: 14%;" align="center">24</td><td style="width: 14%;" align="center">25</td><td class="CalWeekendDay" style="width: 14%;" align="center">26</td></tr><tr><td class="CalWeekendDay" style="width: 14%;" align="center">27</td><td style="width: 14%;" align="center">28</td><td style="width: 14%;" align="center">29</td><td style="width: 14%;" align="center"><a href="http://www.cppblog.com/converse/archive/2006/08/30.html"><u>30</u></a></td><td style="width: 14%;" align="center">31</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">1</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">2</td></tr><tr><td class="CalOtherMonthDay" style="width: 14%;" align="center">3</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">4</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">5</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">6</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">7</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">8</td><td class="CalOtherMonthDay" style="width: 14%;" align="center">9</td></tr>
</tbody></table>

			
<div class="listtitle">统计</div>
	<ul class="list">
		<li class="listitem">随笔 - 158
		</li><li class="listitem">文章 - 0
		</li><li class="listitem">评论 - 503
		</li><li class="listitem">引用 - 0
	</li>
</ul>
			
<div class="listtitle">公告</div>
	<ul class="list">
		<li class="listitem">
			<script type="text/javascript" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/a"></script><div style=""><table style="" cellpadding="4" cellspacing="0"><tbody><tr align="center"><td style=""><a href="http://www.douban.com/subject/1304022/" title="大腕

Big Shot\'s Funeral" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s1325482.jpg" border="0"></a></td><td style=""><a href="http://www.douban.com/subject/1294941/" title="Jaws

大白鲨" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s1394501.jpg" border="0"></a></td></tr><tr align="center"><td style=""><a href="http://www.douban.com/subject/1485260/" title="The Curious Case of Benjamin Button

本杰明·巴顿奇事" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s3348057.jpg" border="0"></a></td><td style=""><a href="http://www.douban.com/subject/3068986/" title="给我一支烟

夜雨" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s2405311.jpg" border="0"></a></td></tr><tr align="center"><td style=""><a href="http://www.douban.com/subject/1292286/" title="엽기적인 그녀

我的野蛮女友 / My Sassy Girl (International: English title)" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s2376357.jpg" border="0"></a></td><td style=""><a href="http://www.douban.com/subject/1307702/" title="和你在一起

Together" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s2351340.jpg" border="0"></a></td></tr><tr align="center"><td style=""><a href="http://www.douban.com/subject/1438760/" title="東京ラブストーリー

东京爱情故事 / Tokyo Love Story" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s1738681.jpg" border="0"></a></td><td style=""><a href="http://www.douban.com/subject/1295644/" title="Léon

这个杀手不太冷 / 杀手莱昂" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/s1885455.jpg" border="0"></a></td></tr><tr><td colspan="2" align="center"><a href="http://www.douban.com/people/Lichuang/" target="_blank">我的豆瓣主页</a></td></tr><tr><td colspan="2" align="center"><a href="http://www.douban.com/" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/atdouban.gif" border="0"></a></td></tr></tbody></table></div>
	</li>
</ul>
			
<h3>常用链接</h3>
<ul>
		<li><a id="SingleColumn1_ctl00_repeaterLinks_ctl01_lnkLinkItem" href="http://www.cppblog.com/converse/MyPosts.html">我的随笔</a></li>
	
		<li><a id="SingleColumn1_ctl00_repeaterLinks_ctl02_lnkLinkItem" href="http://www.cppblog.com/converse/MyComments.html">我的评论</a></li>
	
		<li><a id="SingleColumn1_ctl00_repeaterLinks_ctl03_lnkLinkItem" href="http://www.cppblog.com/converse/OtherPosts.html">我参与的随笔</a></li>
	</ul>
<h3>留言簿<span style="font-size: 11px; font-weight: normal;">(29)</span></h3>
<ul>
	<li>
		<a id="SingleColumn1__3e070e6_lnkMessages" href="http://www.cppblog.com/converse/Contact.aspx?id=1">给我留言</a>
	</li><li>
		<a id="SingleColumn1__3e070e6_lnkPublicMsgView" href="http://www.cppblog.com/converse/default.aspx?opt=msg">查看公开留言</a>
	</li><li>
		<a id="SingleColumn1__3e070e6_lnkPrivateMsgView" href="http://www.cppblog.com/converse/admin/MyMessages.aspx">查看私人留言</a>
	</li>
</ul>

		<h1 class="listtitle">随笔分类<span style="font-size: 11px; font-weight: normal;">(182)</span></h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl01_Link" class="listitem" href="http://www.cppblog.com/converse/category/803.html">C\C++(17)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl01_RssLink" title="Subscribe to C\C++(17)" href="http://www.cppblog.com/converse/category/803.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl02_Link" class="listitem" href="http://www.cppblog.com/converse/category/6498.html">ccache(5)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl02_RssLink" title="Subscribe to ccache(5)" href="http://www.cppblog.com/converse/category/6498.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl03_Link" class="listitem" href="http://www.cppblog.com/converse/category/3609.html">CGL(5)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl03_RssLink" title="Subscribe to CGL(5)" href="http://www.cppblog.com/converse/category/3609.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl04_Link" class="listitem" href="http://www.cppblog.com/converse/category/9340.html">libevent(2)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl04_RssLink" title="Subscribe to libevent(2)" href="http://www.cppblog.com/converse/category/9340.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl05_Link" class="listitem" href="http://www.cppblog.com/converse/category/3799.html">Linux/Unix(26)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl05_RssLink" title="Subscribe to Linux/Unix(26)" href="http://www.cppblog.com/converse/category/3799.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl06_Link" class="listitem" href="http://www.cppblog.com/converse/category/6408.html">Perl(3)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl06_RssLink" title="Subscribe to Perl(3)" href="http://www.cppblog.com/converse/category/6408.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl07_Link" class="listitem" href="http://www.cppblog.com/converse/category/4782.html">操作系统(1)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl07_RssLink" title="Subscribe to 操作系统(1)" href="http://www.cppblog.com/converse/category/4782.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl08_Link" class="listitem" href="http://www.cppblog.com/converse/category/5839.html">读书笔记(3)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl08_RssLink" title="Subscribe to 读书笔记(3)" href="http://www.cppblog.com/converse/category/5839.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl09_Link" class="listitem" href="http://www.cppblog.com/converse/category/3738.html">服务器设计(31)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl09_RssLink" title="Subscribe to 服务器设计(31)" href="http://www.cppblog.com/converse/category/3738.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl10_Link" class="listitem" href="http://www.cppblog.com/converse/category/686.html">脚本语言(1)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl10_RssLink" title="Subscribe to 脚本语言(1)" href="http://www.cppblog.com/converse/category/686.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl11_Link" class="listitem" href="http://www.cppblog.com/converse/category/924.html">其他(5)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl11_RssLink" title="Subscribe to 其他(5)" href="http://www.cppblog.com/converse/category/924.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl12_Link" class="listitem" href="http://www.cppblog.com/converse/category/2256.html">设计模式(24)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl12_RssLink" title="Subscribe to 设计模式(24)" href="http://www.cppblog.com/converse/category/2256.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl13_Link" class="listitem" href="http://www.cppblog.com/converse/category/974.html">算法与数据结构(39)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl13_RssLink" title="Subscribe to 算法与数据结构(39)" href="http://www.cppblog.com/converse/category/974.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl14_Link" class="listitem" href="http://www.cppblog.com/converse/category/921.html">图形学(1)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl14_RssLink" title="Subscribe to 图形学(1)" href="http://www.cppblog.com/converse/category/921.html/rss">(rss)</a></li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl15_Link" class="listitem" href="http://www.cppblog.com/converse/category/2353.html">网络编程(19)</a>  <a id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl15_RssLink" title="Subscribe to 网络编程(19)" href="http://www.cppblog.com/converse/category/2353.html/rss">(rss)</a></li>
			
				</ul>
			
	
		<h1 class="listtitle">随笔档案<span style="font-size: 11px; font-weight: normal;">(158)</span></h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl01_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2009/02.html">2009年2月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl02_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2009/01.html">2009年1月 (5)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl03_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/12.html">2008年12月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl04_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/11.html">2008年11月 (2)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl05_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/10.html">2008年10月 (6)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl06_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/09.html">2008年9月 (12)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl07_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/08.html">2008年8月 (11)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl08_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/07.html">2008年7月 (5)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl09_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/06.html">2008年6月 (2)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl10_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/04.html">2008年4月 (3)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl11_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/03.html">2008年3月 (3)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl12_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/02.html">2008年2月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl13_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2008/01.html">2008年1月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl14_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/12.html">2007年12月 (3)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl15_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/11.html">2007年11月 (3)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl16_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/08.html">2007年8月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl17_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/07.html">2007年7月 (2)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl18_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/06.html">2007年6月 (2)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl19_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/05.html">2007年5月 (9)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl20_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/04.html">2007年4月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl21_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/03.html">2007年3月 (8)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl22_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/02.html">2007年2月 (3)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl23_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2007/01.html">2007年1月 (5)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl24_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/12.html">2006年12月 (4)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl25_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/11.html">2006年11月 (3)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl26_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/10.html">2006年10月 (5)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl27_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/09.html">2006年9月 (4)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl28_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/08.html">2006年8月 (13)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl29_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/07.html">2006年7月 (28)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl30_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/04.html">2006年4月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl31_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/03.html">2006年3月 (4)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl32_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/02.html">2006年2月 (4)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl33_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2006/01.html">2006年1月 (1)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl01_LinkList_ctl34_Link" class="listitem" href="http://www.cppblog.com/converse/archive/2005/12.html">2005年12月 (1)</a>  </li>
			
				</ul>
			
	
		<h1 class="listtitle">相册</h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl02_LinkList_ctl01_Link" class="listitem" href="http://www.cppblog.com/converse/gallery/7557.html">文件</a>  </li>
			
				</ul>
			
	
		<h1 class="listtitle">开源项目</h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl01_Link" class="listitem" href="http://larbin.sourceforge.net/index-eng.html">Larbin</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl02_Link" class="listitem" href="http://www.monkey.org/%7Eprovos/libevent/">libevent</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl03_Link" class="listitem" href="http://www.lighttpd.net/">lighttpd</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl04_Link" class="listitem" href="http://www.danga.com/memcached/">memcached</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl05_Link" class="listitem" href="http://www.psyon.org/projects/pcre-win32/index.php">PCRE for Windows (Win32)</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl06_Link" class="listitem" href="http://www.sqlite.org/">sqlite</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl03_LinkList_ctl07_Link" class="listitem" href="http://www.bdsoft.com/tools/stlfilt.html">STLFilt</a>  </li>
			
				</ul>
			
	
		<h1 class="listtitle">论坛</h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl04_LinkList_ctl01_Link" class="listitem" href="http://bbs.chinaunix.net/">ChinaUnix</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl04_LinkList_ctl02_Link" class="listitem" href="http://www.oldlinux.org/index_cn.html">OldLinux</a>  </li>
			
				</ul>
			
	
		<h1 class="listtitle">朋友</h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl05_LinkList_ctl01_Link" class="listitem" href="http://rainlx.cublog.cn/">cugb_cat</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl05_LinkList_ctl02_Link" class="listitem" href="http://blog.csdn.net/powershell">Edengundam</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl05_LinkList_ctl03_Link" class="listitem" href="http://blog.chinaunix.net/u/20/">win_hate</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl05_LinkList_ctl04_Link" class="listitem" href="http://blog.chinaunix.net/u1/35100/">ypxing</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl05_LinkList_ctl05_Link" class="listitem" href="http://blog.163.com/lc.life/">老罗</a>  </li>
			
				</ul>
			
	
		<h1 class="listtitle">收藏</h1>
		
				<ul class="list">
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl06_LinkList_ctl01_Link" class="listitem" href="http://www.nist.gov/dads/">Dictionary of Algorithms and Data Structures</a>  </li>
			
				<li class="listitem"><a id="SingleColumn1_Categories_CatList_ctl06_LinkList_ctl02_Link" class="listitem" href="http://cb.vu/unixtoolbox.xhtml">unixtoolbox</a>  </li>
			
				</ul>
			
	


<h3>最新随笔</h3>
<div class="RecentComment">
<ul style="">
	
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl00_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/23/74716.html">1.&nbsp;我的项目Makefile文件模板</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl01_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/15/72064.html">2.&nbsp;Linux下面的线程锁,条件变量以及信号量的使用</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl02_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/14/71993.html">3.&nbsp;自己设想的一个IM服务器的架构(续一)</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl03_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/13/71902.html">4.&nbsp;自己设想的一个IM服务器的架构</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl04_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/12/71809.html">5.&nbsp;让libevent支持多线程</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl05_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/03/71040.html">6.&nbsp;libevent事件处理框架分析</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl06_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/12/21/69983.html">7.&nbsp;学习中的80-20法则</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl07_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/11/14/66929.html">8.&nbsp;ccache发布0.5版本</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl08_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/11/10/66530.html">9.&nbsp;红黑树的实现源码(第二次修订版)</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl09_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/31/65656.html">10.&nbsp;ccache发布0.4版本</a></li>
		
	
</ul>
</div>

<script language="JavaScript">
function SearchGoogle(key,evt,site)
		{
			if(evt.keyCode==13 || evt.keyCode==0 || evt.type =='click')
			{
				key.focus();
				var keystr = encodeURIComponent(key.value);
				url = "http://www.google.com/search?q=";
				url = url+keystr;
				url += "&ie=UTF-8&oe=GB2312&hl=zh-CN&domains="+site+"&sitesearch="+site;
				window.location=url;
				return false;
			}
		}
</script>
<h3>搜索</h3>
<ul>
	<li>
		</li><li><input style="width: 130px;" name="q" id="q" onkeydown="return SearchGoogle(document.getElementById('q'),event,'www.cppblog.com/converse')" type="text">&nbsp;<input onclick="SearchGoogle(document.getElementById('q'),event,'www.cppblog.com/converse')" value="搜索" name="sa" type="button">
	</li>
</ul>

<h3>积分与排名</h3>
<ul>
	<li>
		积分 -
		196793
	</li><li>
		排名 -
		7
	</li>
</ul>

<h3>最新随笔</h3>
<div class="RecentComment">
<ul style="">
	
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl00_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/23/74716.html">1.&nbsp;我的项目Makefile文件模板</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl01_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/15/72064.html">2.&nbsp;Linux下面的线程锁,条件变量以及信号量的使用</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl02_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/14/71993.html">3.&nbsp;自己设想的一个IM服务器的架构(续一)</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl03_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/13/71902.html">4.&nbsp;自己设想的一个IM服务器的架构</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl04_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/12/71809.html">5.&nbsp;让libevent支持多线程</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl05_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/03/71040.html">6.&nbsp;libevent事件处理框架分析</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl06_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/12/21/69983.html">7.&nbsp;学习中的80-20法则</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl07_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/11/14/66929.html">8.&nbsp;ccache发布0.5版本</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl08_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/11/10/66530.html">9.&nbsp;红黑树的实现源码(第二次修订版)</a></li>
		
		
	
			<li><a id="SingleColumn1__fb513c_RecentPostsList_ctl09_RecentPostsList2_ctl00_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/31/65656.html">10.&nbsp;ccache发布0.4版本</a></li>
		
	
</ul>
</div>

<h3>最新评论
	<a id="SingleColumn1__379fdc0_RSSHyperlink1" href="http://www.cppblog.com/converse/CommentsRSS.aspx"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/xml.gif" style="border-width: 0px;"></a></h3>
<div class="RecentComment">
	
			<ul>
		
			<li style="">
				<a id="SingleColumn1__379fdc0_CommentList_ctl01_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/18/71040.html#74165">1.&nbsp;re: libevent事件处理框架分析</a>
			</li>
			<li style="">
				callbal函数确实可以设定多个事件。<br>第二个问题还没看到。学习libevent中。
			</li>
			<li style="text-align: right; margin-right: 4px;">
				--cocobear</li>
		
			<li style="">
				<a id="SingleColumn1__379fdc0_CommentList_ctl02_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/12/48482.html#73556">2.&nbsp;re: epoll学习笔记</a>
			</li>
			<li style="">
				@true
<br>不是因为sleep 5s后才能监听到变化
<br>而是sleep后又发了一次...
			</li>
			<li style="text-align: right; margin-right: 4px;">
				--sss</li>
		
			<li style="">
				<a id="SingleColumn1__379fdc0_CommentList_ctl03_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/11/72064.html#73444">3.&nbsp;re: Linux下面的线程锁,条件变量以及信号量的使用</a>
			</li>
			<li style="">
				关于最后一段对用信号量实现通知/等待机制和用条件变量来实现相同机制的比较，所说的两点都对信号量有利，那条件变量多余了吗？
			</li>
			<li style="text-align: right; margin-right: 4px;">
				--yqiang</li>
		
			<li style="">
				<a id="SingleColumn1__379fdc0_CommentList_ctl04_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/09/10858.html#73313">4.&nbsp;re: 常见设计模式的解析和实现(C++)之十五-Observer模式 [未登录]</a>
			</li>
			<li style="">
				将Attach 和 Detach定义在Observer中，让Observer主动attach 和Detach
			</li>
			<li style="text-align: right; margin-right: 4px;">
				--peter</li>
		
			<li style="">
				<a id="SingleColumn1__379fdc0_CommentList_ctl05_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/02/05/10376.html#73066">5.&nbsp;re: 常见设计模式的解析和实现(C++)之七-Bridge模式 </a>
			</li>
			<li style="">
				评论内容较长,点击标题查看
			</li>
			<li style="text-align: right; margin-right: 4px;">
				--孤烟</li>
		
			</ul>
		
</div>

<h3>阅读排行榜</h3>
<div class="RecentComment">
	
			<ul style="">
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl01_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.aspx">1.&nbsp;epoll学习笔记(5025)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl02_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/08/11/11139.aspx">2.&nbsp;常见设计模式的解析和实现(C++)文档及源码打包下载(4894)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl03_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/07/08/9577.aspx">3.&nbsp;二叉树遍历算法集合(前中后序遍历的递归和非递归算法,层序遍历算法)(3501)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl04_Hyperlink1" href="http://www.cppblog.com/converse/archive/2005/12/27/2199.aspx">4.&nbsp;使用tolua++创建基于C\C++语言的lua脚本(3327)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl05_Hyperlink1" href="http://www.cppblog.com/converse/archive/2007/11/28/37430.aspx">5.&nbsp;[算法]红黑树的实现代码(修订版)(3092)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl06_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/10/07/13413.aspx">6.&nbsp;[数据结构]红黑树的实现源码(2869)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl07_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/12/63836.aspx">7.&nbsp;epoll为什么这么快(2816)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl08_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/11/10/66530.aspx">8.&nbsp;红黑树的实现源码(第二次修订版)(2761)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl09_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/01/14/2733.aspx">9.&nbsp;探索C++的秘密之一详解extern "C"(2645)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl10_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/09/02/11969.aspx">10.&nbsp;P2P原理的解释与实现(2623)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl11_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/03/24/45236.aspx">11.&nbsp;发布我的开源cache库ccache(2617)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl12_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/08/03/10826.aspx">12.&nbsp;第一个socket程序-C\S模式的文件传输程序(2569)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl13_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/06/06/52390.aspx">13.&nbsp;(C++)一个愚蠢的错误(2502)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl14_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/08/22/59683.aspx">14.&nbsp;lighttpd1.4.18代码分析(一)--watcher,worker模型(2481)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl15_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/04/01/45947.aspx">15.&nbsp;研究了一下SGI STL的内存算法(2388)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl16_Hyperlink1" href="http://www.cppblog.com/converse/archive/2007/08/29/31179.aspx">16.&nbsp;AVL树的实现代码(2375)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl17_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/13/63928.aspx">17.&nbsp;epoll相关资料整理(2344)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl18_Hyperlink1" href="http://www.cppblog.com/converse/archive/2007/11/21/37107.aspx">18.&nbsp;程序设计经验总结(2305)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl19_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/03/26/45472.aspx">19.&nbsp;两种网络数据格式的比较(2218)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl20_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/08/11/58563.aspx">20.&nbsp;服务器公共库开发-内存池管理模块(2141)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl21_Hyperlink1" href="http://www.cppblog.com/converse/archive/2007/11/26/37333.aspx">21.&nbsp;[算法]找出m个数中最小的n个数(2130)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl22_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/22/64733.aspx">22.&nbsp;对一个服务器的几步优化(2111)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl23_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/11/14/66929.aspx">23.&nbsp;ccache发布0.5版本(2098)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl24_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/08/63504.aspx">24.&nbsp;多进程服务器中,epoll的创建应该在创建子进程之后(1984)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl25_Hyperlink1" href="http://www.cppblog.com/converse/archive/2006/02/13/3244.aspx">25.&nbsp;NeHe OpenGL教程第六课--Texture Mapping(纹理映射)的学习笔记(1966)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl26_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/16/64187.aspx">26.&nbsp;服务器定时器处理要注意的问题(1956)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl27_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/06/21/54225.aspx">27.&nbsp;如何使用位操作得到大于N且为2的次方的最小的数(1949)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl28_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/08/05/58044.aspx">28.&nbsp;服务器公共库开发--log系统(1890)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl29_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/03/71040.aspx">29.&nbsp;libevent事件处理框架分析(1875)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl30_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/31/65656.aspx">30.&nbsp;ccache发布0.4版本(1861)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl31_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/01/21/41592.aspx">31.&nbsp;memcache内存池的设计原理(1832)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl32_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/08/28/60305.aspx">32.&nbsp;lighttpd1.4.18代码分析(三)--网络IO事件处理器的使用(1755)</a>
			</li>
		
			<li>
				<a id="SingleColumn1__29fe7d9_TopList_ctl33_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/09/29/63068.aspx">33.&nbsp;(算法导论习题解exercise2.3-4)递归版插入排序(1747)</a>
			</li>
		
			</ul>
		
</div>

			
		<div class="spacer">&nbsp;</div>
		</div>
		<div class="centercolumn">
			
					
<div class="singlepost">
	<div class="posttitle">
		<a id="viewpost1_TitleUrl" class="singleposttitle" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html">epoll学习笔记</a>
	</div>
epoll有两种模式,Edge Triggered(简称ET) 和 Level
Triggered(简称LT).在采用这两种模式时要注意的是,如果采用ET模式,那么仅当状态发生变化时才会通知,而采用LT模式类似于原来的
select/poll操作,只要还有没有处理的事件就会一直通知.<br><br>以代码来说明问题:<br>首先给出server的代码,需要说明的是每次accept的连接,加入可读集的时候采用的都是ET模式,而且接收缓冲区是5字节的,也就是每次只接收5字节的数据:<br>
<div style="border: 1px solid rgb(204, 204, 204); padding: 4px 5px 4px 4px; background-color: rgb(238, 238, 238); font-size: 13px; width: 98%;"><!--<br><br>Code highlighting produced by Actipro CodeHighlighter (freeware)<br>http://www.CodeHighlighter.com/<br><br>--><span style="color: rgb(0, 0, 0);">#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">iostream</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">sys</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">socket.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">sys</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">epoll.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">netinet</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">in.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">arpa</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">inet.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">fcntl.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">unistd.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">stdio.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br>#include&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">errno.h</span><span style="color: rgb(0, 0, 0);">&gt;</span><span style="color: rgb(0, 0, 0);"><br><br>using&nbsp;namespace&nbsp;std;<br><br>#define&nbsp;MAXLINE&nbsp;</span><span style="color: rgb(0, 0, 0);">5</span><span style="color: rgb(0, 0, 0);"><br>#define&nbsp;OPEN_MAX&nbsp;</span><span style="color: rgb(0, 0, 0);">100</span><span style="color: rgb(0, 0, 0);"><br>#define&nbsp;LISTENQ&nbsp;</span><span style="color: rgb(0, 0, 0);">20</span><span style="color: rgb(0, 0, 0);"><br>#define&nbsp;SERV_PORT&nbsp;</span><span style="color: rgb(0, 0, 0);">5000</span><span style="color: rgb(0, 0, 0);"><br>#define&nbsp;INFTIM&nbsp;</span><span style="color: rgb(0, 0, 0);">1000</span><span style="color: rgb(0, 0, 0);"><br><br>void&nbsp;setnonblocking(</span><span style="color: rgb(0, 0, 255);">int</span><span style="color: rgb(0, 0, 0);">&nbsp;sock)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">int</span><span style="color: rgb(0, 0, 0);">&nbsp;opts;<br>&nbsp;&nbsp;&nbsp;&nbsp;opts</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">fcntl(sock,F_GETFL);<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">(opts</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perror(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">fcntl(sock,GETFL)</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">exit</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;opts&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;opts|O_NONBLOCK;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">(fcntl(sock,F_SETFL,opts)</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perror(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">fcntl(sock,SETFL,opts)</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">exit</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<br>}<br><br></span><span style="color: rgb(0, 0, 255);">int</span><span style="color: rgb(0, 0, 0);">&nbsp;main()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">int</span><span style="color: rgb(0, 0, 0);">&nbsp;i,&nbsp;maxi,&nbsp;listenfd,&nbsp;connfd,&nbsp;sockfd,epfd,nfds;<br>&nbsp;&nbsp;&nbsp;&nbsp;ssize_t&nbsp;n;<br>&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;line[MAXLINE];<br>&nbsp;&nbsp;&nbsp;&nbsp;socklen_t&nbsp;clilen;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">声明epoll_event结构体的变量,ev用于注册事件,数组用于回传要处理的事件<br>&nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;epoll_event&nbsp;ev,events[</span><span style="color: rgb(0, 0, 0);">20</span><span style="color: rgb(0, 0, 0);">];<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">生成用于处理accept的epoll专用的文件描述符<br>&nbsp;&nbsp;&nbsp;&nbsp;epfd</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">epoll_create(</span><span style="color: rgb(0, 0, 0);">256</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;sockaddr_in&nbsp;clientaddr;<br>&nbsp;&nbsp;&nbsp;&nbsp;struct&nbsp;sockaddr_in&nbsp;serveraddr;<br>&nbsp;&nbsp;&nbsp;&nbsp;listenfd&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;socket(AF_INET,&nbsp;SOCK_STREAM,&nbsp;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">把socket设置为非阻塞方式<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">setnonblocking(listenfd);<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置与要处理的事件相关的文件描述符<br>&nbsp;&nbsp;&nbsp;&nbsp;ev.data.fd</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">listenfd;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置要处理的事件类型<br>&nbsp;&nbsp;&nbsp;&nbsp;ev.events</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">EPOLLIN|EPOLLET;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">ev.events</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">EPOLLIN;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">注册epoll事件<br>&nbsp;&nbsp;&nbsp;&nbsp;epoll_ctl(epfd,EPOLL_CTL_ADD,listenfd,</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">ev);<br>&nbsp;&nbsp;&nbsp;&nbsp;bzero(</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">serveraddr,&nbsp;sizeof(serveraddr));<br>&nbsp;&nbsp;&nbsp;&nbsp;serveraddr.sin_family&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;AF_INET;<br>&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;</span><span style="color: rgb(0, 0, 0);">*</span><span style="color: rgb(0, 0, 0);">local_addr</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">127.0.0.1</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>&nbsp;&nbsp;&nbsp;&nbsp;inet_aton(local_addr,</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">(serveraddr.sin_addr));</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">htons(SERV_PORT);<br>&nbsp;&nbsp;&nbsp;&nbsp;serveraddr.sin_port</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">htons(SERV_PORT);<br>&nbsp;&nbsp;&nbsp;&nbsp;bind(listenfd,(sockaddr&nbsp;</span><span style="color: rgb(0, 0, 0);">*</span><span style="color: rgb(0, 0, 0);">)</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">serveraddr,&nbsp;sizeof(serveraddr));<br>&nbsp;&nbsp;&nbsp;&nbsp;listen(listenfd,&nbsp;LISTENQ);<br>&nbsp;&nbsp;&nbsp;&nbsp;maxi&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">;<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">for</span><span style="color: rgb(0, 0, 0);">&nbsp;(&nbsp;;&nbsp;;&nbsp;)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">等待epoll事件的发生<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nfds</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">epoll_wait(epfd,events,</span><span style="color: rgb(0, 0, 0);">20</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(0, 0, 0);">500</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">处理所发生的所有事件&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">for</span><span style="color: rgb(0, 0, 0);">(i</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">;i</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">nfds;</span><span style="color: rgb(0, 0, 0);">++</span><span style="color: rgb(0, 0, 0);">i)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">(events[i].data.fd</span><span style="color: rgb(0, 0, 0);">==</span><span style="color: rgb(0, 0, 0);">listenfd)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connfd&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;accept(listenfd,(sockaddr&nbsp;</span><span style="color: rgb(0, 0, 0);">*</span><span style="color: rgb(0, 0, 0);">)</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">clientaddr,&nbsp;</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">clilen);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">(connfd</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perror(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">connfd&lt;0</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">exit</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">setnonblocking(connfd);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;</span><span style="color: rgb(0, 0, 0);">*</span><span style="color: rgb(0, 0, 0);">str&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;inet_ntoa(clientaddr.sin_addr);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">accapt&nbsp;a&nbsp;connection&nbsp;from&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;str&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;endl;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置用于读操作的文件描述符<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev.data.fd</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">connfd;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置用于注测的读操作事件<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev.events</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">EPOLLIN|EPOLLET;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">ev.events</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">EPOLLIN;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">注册ev<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;epoll_ctl(epfd,EPOLL_CTL_ADD,connfd,</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">ev);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">else</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">(events[i].events</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">EPOLLIN)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">EPOLLIN</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;endl;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">&nbsp;(&nbsp;(sockfd&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;events[i].data.fd)&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">)&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">&nbsp;(&nbsp;(n&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;read(sockfd,&nbsp;line,&nbsp;MAXLINE))&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">&nbsp;(errno&nbsp;</span><span style="color: rgb(0, 0, 0);">==</span><span style="color: rgb(0, 0, 0);">&nbsp;ECONNRESET)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close(sockfd);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;events[i].data.fd&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">-</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span style="color: rgb(0, 0, 255);">else</span><span style="color: rgb(0, 0, 0);"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::cout</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">readline&nbsp;error</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">std::endl;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span style="color: rgb(0, 0, 255);">else</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">&nbsp;(n&nbsp;</span><span style="color: rgb(0, 0, 0);">==</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close(sockfd);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;events[i].data.fd&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">-</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line[n]&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 128, 0);">'</span><span style="color: rgb(0, 128, 0);">\0';</span><span style="color: rgb(0, 128, 0);"><br></span><span style="color: rgb(0, 0, 0);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">read&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;line&nbsp;</span><span style="color: rgb(0, 0, 0);">&lt;&lt;</span><span style="color: rgb(0, 0, 0);">&nbsp;endl;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置用于写操作的文件描述符<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev.data.fd</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">sockfd;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置用于注测的写操作事件<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev.events</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">EPOLLOUT|EPOLLET;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">修改sockfd上要处理的事件为EPOLLOUT<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">epoll_ctl(epfd,EPOLL_CTL_MOD,sockfd,</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">ev);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 255);">else</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">if</span><span style="color: rgb(0, 0, 0);">(events[i].events</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">EPOLLOUT)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sockfd&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;events[i].data.fd;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;write(sockfd,&nbsp;line,&nbsp;n);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置用于读操作的文件描述符<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev.data.fd</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">sockfd;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">设置用于注测的读操作事件<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ev.events</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">EPOLLIN|EPOLLET;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(0, 0, 0);">//</span><span style="color: rgb(0, 0, 0);">修改sockfd上要处理的事件为EPOLIN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;epoll_ctl(epfd,EPOLL_CTL_MOD,sockfd,</span><span style="color: rgb(0, 0, 0);">&amp;</span><span style="color: rgb(0, 0, 0);">ev);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: rgb(0, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">;<br>}<br><br></span></div>
<br>下面给出测试所用的Perl写的client端,在client中发送10字节的数据,同时让client在发送完数据之后进入死循环, 也就是在发送完之后连接的状态不发生改变--既不再发送数据, 也不关闭连接,这样才能观察出server的状态:<br>
<div style="border: 1px solid rgb(204, 204, 204); padding: 4px 5px 4px 4px; background-color: rgb(238, 238, 238); font-size: 13px; width: 98%;"><!--<br><br>Code highlighting produced by Actipro CodeHighlighter (freeware)<br>http://www.CodeHighlighter.com/<br><br>--><span style="color: rgb(0, 0, 0);">#!</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">usr</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">bin</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">perl<br><br>use&nbsp;IO::Socket;<br><br>my&nbsp;$host&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">127.0.0.1</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>my&nbsp;$port&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">5000</span><span style="color: rgb(0, 0, 0);">;<br><br>my&nbsp;$socket&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;IO::Socket::INET</span><span style="color: rgb(0, 0, 0);">-&gt;</span><span style="color: rgb(0, 0, 255);">new</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">$host:$port</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">)&nbsp;</span><span style="color: rgb(0, 0, 255);">or</span><span style="color: rgb(0, 0, 0);">&nbsp;die&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">create&nbsp;socket&nbsp;error&nbsp;$@</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>my&nbsp;$msg_out&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1234567890</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>print&nbsp;$socket&nbsp;$msg_out;<br>print&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">now&nbsp;send&nbsp;over,&nbsp;go&nbsp;to&nbsp;sleep<img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/dot.gif">\n</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br><br></span><span style="color: rgb(0, 0, 255);">while</span><span style="color: rgb(0, 0, 0);">&nbsp;(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;sleep(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">);<br>}<br></span></div>
运行server和client发现,server仅仅读取了5字节的数据,而client其实发送了10字节的数据,也就是说,server仅当第一次
监听到了EPOLLIN事件,由于没有读取完数据,而且采用的是ET模式,状态在此之后不发生变化,因此server再也接收不到EPOLLIN事件了.<br><br>如果我们把client改为这样:<br>
<div style="border: 1px solid rgb(204, 204, 204); padding: 4px 5px 4px 4px; background-color: rgb(238, 238, 238); font-size: 13px; width: 98%;"><!--<br><br>Code highlighting produced by Actipro CodeHighlighter (freeware)<br>http://www.CodeHighlighter.com/<br><br>--><span style="color: rgb(0, 0, 0);">#!</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">usr</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">bin</span><span style="color: rgb(0, 0, 0);">/</span><span style="color: rgb(0, 0, 0);">perl<br><br>use&nbsp;IO::Socket;<br><br>my&nbsp;$host&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">127.0.0.1</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>my&nbsp;$port&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">5000</span><span style="color: rgb(0, 0, 0);">;<br><br>my&nbsp;$socket&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;IO::Socket::INET</span><span style="color: rgb(0, 0, 0);">-&gt;</span><span style="color: rgb(0, 0, 255);">new</span><span style="color: rgb(0, 0, 0);">(</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">$host:$port</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">)&nbsp;</span><span style="color: rgb(0, 0, 255);">or</span><span style="color: rgb(0, 0, 0);">&nbsp;die&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">create&nbsp;socket&nbsp;error&nbsp;$@</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>my&nbsp;$msg_out&nbsp;</span><span style="color: rgb(0, 0, 0);">=</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">1234567890</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>print&nbsp;$socket&nbsp;$msg_out;<br>print&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">now&nbsp;send&nbsp;over,&nbsp;go&nbsp;to&nbsp;sleep<img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/dot.gif">\n</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>sleep(</span><span style="color: rgb(0, 0, 0);">5</span><span style="color: rgb(0, 0, 0);">);<br>print&nbsp;</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">5&nbsp;second&nbsp;gone<img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/dot.gif">send&nbsp;another&nbsp;line\n</span><span style="color: rgb(0, 0, 0);">"</span><span style="color: rgb(0, 0, 0);">;<br>print&nbsp;$socket&nbsp;$msg_out;<br><br></span><span style="color: rgb(0, 0, 255);">while</span><span style="color: rgb(0, 0, 0);">&nbsp;(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;sleep(</span><span style="color: rgb(0, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">);<br>}<br></span></div>
<br>可以发现,在server接收完5字节的数据之后一直监听不到client的事件,而当client休眠5秒之后重新发送数据,server再次监听到了变化,只不过因为只是读取了5个字节,仍然有10个字节的数据(client第二次发送的数据)没有接收完.<br><br>如果上面的实验中,对accept的socket都采用的是LT模式,那么只要还有数据留在buffer中,server就会继续得到通知,读者可以自行改动代码进行实验.<br><br>基
于这两个实验,可以得出这样的结论:ET模式仅当状态发生变化的时候才获得通知,这里所谓的状态的变化并不包括缓冲区中还有未处理的数据,也就是说,如果
要采用ET模式,需要一直read/write直到出错为止,很多人反映为什么采用ET模式只接收了一部分数据就再也得不到通知了,大多因为这样;而LT
模式是只要有数据没有处理就会一直通知下去的.<br><br>
<div id="message8301479" class="t_msgfont">补充说明一下这里一直强调的"状态变化"是什么:<br>
<br>
1)对于监听可读事件时,如果是socket是监听socket,那么当有新的主动连接到来为状态发生变化;对一般的socket而言,协议栈中相应的缓
冲区有新的数据为状态发生变化.但是,如果在一个时间同时接收了N个连接(N&gt;1),但是监听socket只accept了一个连接,那么其它未
accept的连接将不会在ET模式下给监听socket发出通知,此时状态不发生变化;对于一般的socket,就如例子中而言,如果对应的缓冲区本身
已经有了N字节的数据,而只取出了小于N字节的数据,那么残存的数据不会造成状态发生变化.<br>
<br>
2)对于监听可写事件时,同理可推,不再详述.<br>
<br>
而不论是监听可读还是可写,对方关闭socket连接都将造成状态发生变化,比如在例子中,如果强行中断client脚本,也就是主动中断了socket连接,那么都将造成server端发生状态的变化,从而server得到通知,将已经在本方缓冲区中的数据读出.<br>
<br>
把前面的描述可以总结如下:仅当对方的动作(发出数据,关闭连接等)造成的事件才能导致状态发生变化,而本方协议栈中已经处理的事件(包括接收了对方的数
据,接收了对方的主动连接请求)并不是造成状态发生变化的必要条件,状态变化一定是对方造成的.所以在ET模式下的,必须一直处理到出错或者完全处理完
毕,才能进行下一个动作,否则可能会发生错误.</div>
<br>另外,从这个例子中,也可以阐述一些基本的网络编程概念.首先,连接的两端中,一端发送成功并不代表着对方上层应用程序接收成功,
就拿上面的client测试程序来说,10字节的数据已经发送成功,但是上层的server并没有调用read读取数据,因此发送成功仅仅说明了数据被对
方的协议栈接收存放在了相应的buffer中,而上层的应用程序是否接收了这部分数据不得而知;同样的,读取数据时也只代表着本方协议栈的对应
buffer中有数据可读,而此时时候在对端是否在发送数据也不得而知.<br><br><br>  
	<div class="itemdesc">
		posted on 2008-04-29 20:06 <a href="http://www.cppblog.com/converse/">那谁</a> 阅读(5025) <a href="#Post">评论(9)</a> &nbsp;<a href="http://www.cppblog.com/converse/admin/EditPosts.aspx?postid=48482">编辑</a>&nbsp;<a href="http://www.cppblog.com/converse/AddToFavorite.aspx?id=48482">收藏</a> <a href="http://www.cppblog.com/converse/services/trackbacks/48482.aspx">引用</a>  所属分类: <a href="http://www.cppblog.com/converse/category/2353.html">网络编程</a> 、<a href="http://www.cppblog.com/converse/category/3738.html">服务器设计</a> 、<a href="http://www.cppblog.com/converse/category/3799.html">Linux/Unix</a> 
	</div>
</div>
	<img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/48482.jpg" height="1" width="1">
	
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://www.cppblog.com/converse/archive/2008/04/29/48482.html"
dc:identifier="http://www.cppblog.com/converse/archive/2008/04/29/48482.html"
dc:title="epoll学习笔记"
trackback:ping="http://www.cppblog.com/converse/services/trackbacks/48482.aspx" />
</rdf:RDF>
-->

<script type="text/javascript">
//<![CDATA[
Sys.WebForms.PageRequestManager._initialize('AjaxHolder$scriptmanager1', document.getElementById('Form1'));
Sys.WebForms.PageRequestManager.getInstance()._updateControls(['tAjaxHolder$UpdatePanel1'], [], [], 90);
//]]>
</script>

<div id="AjaxHolder_UpdatePanel1">
	    
    <a name="pagedcomment"></a>
<a name="评论">
</a><div class="moreinfo">
<a name="评论">	</a><div class="moreinfotitle">
<a name="评论">		Comments
	</a></div>
<a name="评论">		
	
			</a><ul class="morelist">
<a name="评论">		
			</a><li class="morelistitem">
<a name="评论">				</a><div class="moreinfotitle">
<a name="评论">					</a><a title="permalink: re: epoll学习笔记[未登录]" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#48492">#</a>&nbsp;<a name="48492"></a>re: epoll学习笔记[未登录]
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl01_NameLink" href="http://www.cppblog.com/true" target="_blank">true</a><br>
				Posted @ 2008-04-29 23:06<br>
				而当client休眠5秒之后重新发送数据,server再次监听到了变化,
<br>为什么sleep 5s就能监听到变化？此时缓冲区中不是一直有数据吗？再发送10字节的数据，只是数据多了而已，ET的“状态”发生变化了？&nbsp;&nbsp;<a onclick='return SetReplyAuhor("true")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=true" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl01_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl01$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl01_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#48500">#</a>&nbsp;<a name="48500"></a>re: epoll学习笔记
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl02_NameLink" href="http://guan-zhong-dao-ke.blog.163.com/" target="_blank">关中刀客</a><br>
				Posted @ 2008-04-30 08:54<br>
				你可以把这个改进成一个epoll+线程池
<br>这样子单线程效率...............&nbsp;&nbsp;<a onclick='return SetReplyAuhor("关中刀客")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=%e5%85%b3%e4%b8%ad%e5%88%80%e5%ae%a2" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl02_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl02$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl02_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#57642">#</a>&nbsp;<a name="57642"></a>re: epoll学习笔记
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl03_NameLink" target="_blank">白痴</a><br>
				Posted @ 2008-07-31 15:04<br>
				SERVER 只是最多只是接受5个字符 在MAXLINE = 5 限制了
<br>&nbsp;&nbsp;<a onclick='return SetReplyAuhor("白痴")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=%e7%99%bd%e7%97%b4" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl03_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl03$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl03_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#60345">#</a>&nbsp;<a name="60345"></a>re: epoll学习笔记
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl04_NameLink" target="_blank">QQ:147439772</a><br>
				Posted @ 2008-08-29 12:21<br>
				connfd = accept(listenfd,(sockaddr *)&amp;clientaddr, &amp;clilen);
<br>这一句的最后一个参数错了, 导致每次新的连接的地址输出错误. 其他, 很好!&nbsp;&nbsp;<a onclick='return SetReplyAuhor("QQ:147439772")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=QQ%3a147439772" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl04_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl04$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl04_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记[未登录]" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#64199">#</a>&nbsp;<a name="64199"></a>re: epoll学习笔记[未登录]
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl05_NameLink" href="http://www.cppblog.com/converse/" target="_blank">创</a><br>
				Posted @ 2008-10-16 20:41<br>
				@关中刀客<br>这个只是起演示作用的,谢谢.<br>&nbsp;&nbsp;<a onclick='return SetReplyAuhor("创")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=%e5%88%9b" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl05_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl05$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl05_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#65188">#</a>&nbsp;<a name="65188"></a>re: epoll学习笔记
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl06_NameLink" target="_blank">coolll</a><br>
				Posted @ 2008-10-27 13:05<br>
				listenfd 在accept一个clt后不用mod它的event吗？&nbsp;&nbsp;<a onclick='return SetReplyAuhor("coolll")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=coolll" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl06_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl06$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl06_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#65194">#</a>&nbsp;<a name="65194"></a>re: epoll学习笔记
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl07_NameLink" target="_blank">sss</a><br>
				Posted @ 2008-10-27 13:27<br>
				但是,如果在一个时间同时接收了N个连接(N&gt;1),但是监听socket只accept了一个连接,那么其它未 accept的连接将不会在ET模式下给监听socket发出通知,此时状态不发生变化;<br><br>----------------<br>那对于listenfd是不是应该采用LT模式？&nbsp;&nbsp;<a onclick='return SetReplyAuhor("sss")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=sss" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl07_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl07$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl07_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#65196">#</a>&nbsp;<a name="65196"></a>re: epoll学习笔记
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl08_NameLink" target="_blank">sss</a><br>
				Posted @ 2008-10-27 13:29<br>
				可以accept 出错为止吗？&nbsp;&nbsp;<a onclick='return SetReplyAuhor("sss")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=sss" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl08_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl08$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl08_EditLink"></a>
			</li>
		
			<li class="morelistitem">
				<div class="moreinfotitle">
					<a title="permalink: re: epoll学习笔记" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#73556">#</a>&nbsp;<a name="73556"></a>re: epoll学习笔记<a name="Post"></a>
				</div>
				<a id="AjaxHolder_Comments_CommentList_ctl09_NameLink" target="_blank">sss</a><br>
				Posted @ 2009-02-12 15:11<br>
				@true
<br>不是因为sleep 5s后才能监听到变化
<br>而是sleep后又发了一次...&nbsp;&nbsp;<a onclick='return SetReplyAuhor("sss")' href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#post">回复</a>&nbsp;&nbsp;<a title="查看该作者发表过的评论" href="http://www.cppblog.com/comment?author=sss" target="_blank">更多评论</a>
				<a id="AjaxHolder_Comments_CommentList_ctl09_DeleteLink" href="javascript:__doPostBack('AjaxHolder$Comments$CommentList$ctl09$DeleteLink','')"></a>&nbsp;&nbsp;<a id="AjaxHolder_Comments_CommentList_ctl09_EditLink"></a>
			</li>
		
			</ul>
		
</div>


<div id="AjaxHolder_Comments_divRefreshComments" style="text-align: right; margin-right: 10px; margin-bottom: 5px; font-size: 12px;"><a id="AjaxHolder_Comments_refreshList" href="javascript:__doPostBack('AjaxHolder$Comments$refreshList','')">刷新评论列表</a></div>

<!--Beging Temp Save-->

<div class="userData" id="CommentsPersistDiv"></div>
<script type="text/javascript">
function pageLoad()
{
    Sys.WebForms.PageRequestManager.getInstance().add_initializeRequest(handleInitializeRequest);
    //Sys.WebForms.PageRequestManager.getInstance().add_endRequest(handleEndRequest);
}

function handleInitializeRequest(sender, args)
{
    var prm = Sys.WebForms.PageRequestManager.getInstance();
    var eid = args.get_postBackElement().id;
    if (eid.indexOf("DeleteLink")>0) 
    {
       args.get_postBackElement().innerHTML = "<font color='red'>正在删除...</font>";         
    }    
    if (eid.indexOf("btnSubmit")>0) 
    {
       document.getElementById("AjaxHolder_PostComment_ltSubmitMsg").innerHTML="正在提交...";
       document.getElementById("AjaxHolder_PostComment_btnSubmit").disabled = true;
       
    }    
   
}	

function TempSave(ElementID)
{
	try
	{
	CommentsPersistDiv.setAttribute("CommentContent",document.getElementById(ElementID).value);
	CommentsPersistDiv.save("CommentXMLStore");
	}
	catch(ex)
	{
	}
	
}
function Restore(ElementID)
{
	CommentsPersistDiv.load("CommentXMLStore");
	document.getElementById(ElementID).value=CommentsPersistDiv.getAttribute("CommentContent");
}	
			
			
</script>
<!--Ene TempSave-->
<div class="commentform">
<span id="AjaxHolder_PostComment_ltSubmitMsg" style="color: Red;"></span>
<br>
<a name="Feedback"></a>
	<table border="0" cellpadding="1" cellspacing="1">
		<tbody><tr>
			<td width="75"></td>
			<td></td>
			<td></td>
		</tr>
		<tr>
			<td width="55">标题</td>
			<td><input name="AjaxHolder$PostComment$tbTitle" value="re: epoll学习笔记" id="AjaxHolder_PostComment_tbTitle" class="commenttb" style="width: 320px;" type="text"></td>
			<td><span id="AjaxHolder_PostComment_RequiredFieldValidator1" style="color: Red; visibility: hidden;">请输入标题</span></td>
		</tr>
		<tr>
			<td>姓名</td>
			<td><input name="AjaxHolder$PostComment$tbName" id="AjaxHolder_PostComment_tbName" class="commenttb" style="width: 320px;" type="text"></td>
			<td><span id="AjaxHolder_PostComment_RequiredFieldValidator2" style="color: Red; visibility: hidden;">请输入你的姓名</span></td>
		</tr>
		<tr>
			<td>主页</td>
			<td><input name="AjaxHolder$PostComment$tbUrl" id="AjaxHolder_PostComment_tbUrl" class="commenttb" style="width: 320px;" type="text"></td>
			<td><font face="宋体"></font></td>
		</tr>
		<tr>
			<td colspan="3" align="left">
				<table id="AjaxHolder_PostComment_tbCaptchaImage" class="CommentForm" border="0" cellpadding="0" cellspacing="0">
		<tbody><tr>
			<td colspan="3">
							<span id="AjaxHolder_PostComment_Requiredfieldvalidator4" style="color: Red; display: none;">请输入验证码</span>
							<span id="AjaxHolder_PostComment_lblImage" style="color: Red; font-weight: bold;"></span>
						</td>
		</tr>
		<tr>
			<td width="78">验证码</td>
			<td><input name="AjaxHolder$PostComment$CodeNumberTextBox" id="AjaxHolder_PostComment_CodeNumberTextBox" type="text">*</td>
			<td align="left">
							<img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/JpegImage.jpg" id="AjaxHolder_PostComment_Img1">
						</td>
		</tr>
	</tbody></table>
	
			</td>
		</tr>
		<tr>
			<td colspan="3">内容(提交失败后,可以通过“恢复上次提交”恢复刚刚提交的内容)
				<span id="AjaxHolder_PostComment_RequiredFieldValidator3" style="color: Red; visibility: hidden;">请输入评论内容</span><br>
				<textarea name="AjaxHolder$PostComment$tbComment" rows="10" cols="50" id="AjaxHolder_PostComment_tbComment" class="commentTextBox" onkeydown="ctlent(event,'AjaxHolder_PostComment_tbComment')" style="width: 480px; height: 220px;"></textarea></td>
		</tr>
		<tr>
			<td colspan="3">
		<span id="AjaxHolder_PostComment_Message" style="color: Red;"></span>
		</td>
		</tr><tr>
			<td colspan="3"><input id="AjaxHolder_PostComment_chkRemember" name="AjaxHolder$PostComment$chkRemember" checked="checked" tabindex="-1" type="checkbox"><label for="AjaxHolder_PostComment_chkRemember">Remember Me?</label></td>
		</tr>
		<tr>
			<td height="23"><input name="AjaxHolder$PostComment$btnSubmit" value="提交" onclick="TempSave('AjaxHolder_PostComment_tbComment');WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;AjaxHolder$PostComment$btnSubmit&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, false))" id="AjaxHolder_PostComment_btnSubmit" type="submit">
				</td>
			<td colspan="2" height="23">&nbsp;
				<a id="AjaxHolder_PostComment_lnkLogin" href="http://www.cppblog.com/login.aspx?ReturnURL=http://www.cppblog.com/converse/archive/2008/04/29/48482.html&amp;SourceURL=/converse/archive/2008/04/29/48482.html">登录</a>&nbsp;&nbsp;<a id="AjaxHolder_PostComment_linkLoginComment" onclick="if(document.getElementById('AjaxHolder_PostComment_tbComment').value != '') return confirm('未提交的评论内容将会丢失, 你真的要进入高级评论吗?');" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html?login=1#Post">使用高级评论</a>&nbsp;&nbsp;<a href="http://www.cppblog.com/RequireRegister.aspx">新用户注册</a>&nbsp;&nbsp;<a href="#Top">返回页首</a>&nbsp;&nbsp;<a id="AjaxHolder_PostComment_lbRestore" onclick="Restore('AjaxHolder_PostComment_tbComment'); return false;" href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html#Post">恢复上次提交</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				</td>
		</tr>
		<tr>
			<td colspan="3">[使用Ctrl+Enter键可以直接提交]</td>
		</tr>
		<tr>
			<td colspan="3" height="5">
<div id="divRelativePosts">
相关文章:
	
			<ul style="margin-top: 0px;">
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl01_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/12/71809.html">让libevent支持多线程</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl02_Hyperlink1" href="http://www.cppblog.com/converse/archive/2009/01/03/71040.html">libevent事件处理框架分析</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl03_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/22/64733.html">对一个服务器的几步优化</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl04_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/13/63928.html">epoll相关资料整理</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl05_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/12/63836.html">epoll为什么这么快</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl06_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/10/08/63504.html">多进程服务器中,epoll的创建应该在创建子进程之后</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl07_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/09/24/62658.html">lighttpd1.4.18代码分析(八)--状态机(2)CON_STATE_READ状态</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl08_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/09/22/62497.html">lighttpd1.4.18代码分析(七)--状态机(1)CON_STATE_REQUEST_START状态</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl09_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/09/19/62252.html">lighttpd1.4.18代码分析(六)--处理连接fd的流程</a>
			</li>
		
			<li style="list-style-type: none; list-style-image: none; list-style-position: outside;">
				<a id="AjaxHolder_PostComment_ctl06_RelativePostsList_ctl10_Hyperlink1" href="http://www.cppblog.com/converse/archive/2008/09/05/61039.html">lighttpd1.4.18代码分析(五)--处理超时连接</a>
			</li>
		
			</ul>
		
</div>
</td>
		</tr>
		<tr>
		<td colspan="3">
		<script type="text/javascript"><!--
		google_ad_client = "pub-4210569241504288";
		/* cppblog_commentbox_bottom_468x60, 创建于 08-9-13 */
		google_ad_slot = "6441091489";
		google_ad_width = 468;
		google_ad_height = 60;
		//-->
		</script>
		<script type="text/javascript" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/show_ads.js">
		</script><script src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/test_domain.js"></script><script>window.google_render_ad();</script><ins style="border: medium none ; margin: 0pt; padding: 0pt; height: 60px; position: relative; visibility: visible; width: 468px;"><ins style="border: medium none ; margin: 0pt; padding: 0pt; display: block; height: 60px; position: relative; visibility: visible; width: 468px;"><iframe allowtransparency="true" hspace="0" id="google_ads_frame1" marginheight="0" marginwidth="0" name="google_ads_frame" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/ads.htm" style="left: 0pt; position: absolute; top: 0pt;" vspace="0" frameborder="0" height="60" scrolling="no" width="468"></iframe></ins></ins></td>
		</tr>
		<tr>
			<td colspan="3">相关链接:<script type="text/javascript">
	function GetMeta(ametaName){
	var METAs = document.getElementsByTagName("meta"); 
	for (var i=0; i<METAs.length; i++) { 
	if(METAs[i].name.toLowerCase()==ametaName){return (METAs[i].content);}
	};
	return "";
	}
	var title = document.title;
	document.write("<div id=\"a4_ads_output\">");
	document.write("<script type='text/javascript' src='http://a4.yeshj.com/adwords/EN017?num=7&title="+ encodeURIComponent(title) +"&tag="+ encodeURIComponent(GetMeta("keywords")) +"'></scri"+"pt>");
	document.write("</div>");
	</script><div id="a4_ads_output"><script type="text/javascript" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/EN017.htm"></script><a href="http://a4.yeshj.com/rd?aid=16592&amp;zid=0&amp;url=http%3a%2f%2fts.hjenglish.com%2fmovie%2f51058%2f" target="_blank">《越狱》第四季第1集学习笔记在线收看</a><br><a href="http://a4.yeshj.com/rd?aid=16251&amp;zid=0&amp;url=http%3a%2f%2fwww.cppblog.com%2f" target="_blank">C++博客-专注于C++技术</a><br><a href="http://a4.yeshj.com/rd?aid=23199&amp;zid=0&amp;url=http%3a%2f%2fts.hjenglish.com%2fpage%2f64715" target="_blank">热门新剧《青春密语》S1E03学习笔记在线收看</a><br><a href="http://a4.yeshj.com/rd?aid=17183&amp;zid=0&amp;url=http%3a%2f%2fwww.hjbook.net%2fproduct%2f2801" target="_blank">博客园推荐:软件调试</a><br><a href="http://a4.yeshj.com/rd?aid=21832&amp;zid=0&amp;url=http%3a%2f%2fts.hjenglish.com%2fpage%2f62751" target="_blank">BBC魔幻剧《梅林》1.02"魔法盾牌"笔记在线看</a><br><a href="http://a4.yeshj.com/rd?aid=21681&amp;zid=0&amp;url=http%3a%2f%2fts.hjenglish.com%2fpage%2f60688" target="_blank">灵异美剧《邪恶力量》1.02学习笔记在线收看</a><br><a href="http://a4.yeshj.com/rd?aid=21684&amp;zid=0&amp;url=http%3a%2f%2fts.hjenglish.com%2fpage%2f62301" target="_blank">热门美剧《英雄》1.02学习笔记在线收看</a><br></div></td>
		</tr>
		<tr>
			<td colspan="3" height="1">网站导航:<div id="blogsite">
			<a href="http://www.cnblogs.com/">博客园</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			<a href="http://www.blogjava.net/">BlogJava</a>&nbsp;&nbsp;
			<a href="http://www.cnweblog.com/">博客生活</a>&nbsp;&nbsp;
			<a href="http://www.cnitblog.com/">IT博客网</a>&nbsp;&nbsp;
			<a href="http://www.cppblog.com/">C++博客</a>&nbsp;&nbsp;
			<a href="http://www.phpweblog.net/">PHP博客</a>&nbsp;&nbsp;
			<a href="http://space.cnblogs.com/">博客园社区</a>
			<br>
			<a href="http://www.manageblog.net/">管理博客</a>&nbsp;&nbsp;
			<a href="http://www.teachblog.net/">教师博客</a>&nbsp;&nbsp;
			<a href="http://www.astroblog.cn/">天文博客</a>&nbsp;&nbsp;
			<a href="http://www.cnautoblog.com/">汽车博客</a>&nbsp;&nbsp;
			<a href="http://www.zuqiublog.com/">足球博客</a>&nbsp;&nbsp;
			<a href="http://www.gupiaoblog.com/">股票博客</a>&nbsp;&nbsp;
			<a href="http://www.etronblog.com/">电子博客</a>&nbsp;&nbsp;<a href="http://www.cppblog.com/converse/archive/2008/04/29/48482.html?opt=admin">管理</a>
			</div></td>
		</tr>
		<tr>
			<td colspan="3">
				
<br>
<br>
<iframe marginheight="0" marginwidth="0" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/ad.htm" style="border: 0px solid rgb(102, 102, 102);" allowtransparency="true" frameborder="0" height="0" scrolling="no" width="468"></iframe>
<br>

</td>
		</tr>
	</tbody></table>	
</div>
<div id="AjaxHolder_PostComment_ValidationSummary1" style="color: Red; display: none;">

	</div>

</div>

				
			<div class="spacer">&nbsp;</div>
		</div>
		
<div class="footer">
	Powered by: 
	<br>
	
	<a id="Footer1_Hyperlink3" name="Hyperlink1" href="http://www.cppblog.com/" style="font-family: Verdana; font-size: 12px;">C++博客</a>
	<br>
	Copyright © 那谁
</div>
	</div>

    
    
<script type="text/javascript">
//<![CDATA[
var Page_ValidationSummaries =  new Array(document.getElementById("AjaxHolder_PostComment_ValidationSummary1"));
var Page_Validators =  new Array(document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator1"), document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator2"), document.getElementById("AjaxHolder_PostComment_Requiredfieldvalidator4"), document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator3"));
//]]>
</script>

<script type="text/javascript">
//<![CDATA[
var AjaxHolder_PostComment_RequiredFieldValidator1 = document.all ? document.all["AjaxHolder_PostComment_RequiredFieldValidator1"] : document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator1");
AjaxHolder_PostComment_RequiredFieldValidator1.controltovalidate = "AjaxHolder_PostComment_tbTitle";
AjaxHolder_PostComment_RequiredFieldValidator1.errormessage = "请输入标题";
AjaxHolder_PostComment_RequiredFieldValidator1.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_RequiredFieldValidator1.initialvalue = "";
var AjaxHolder_PostComment_RequiredFieldValidator2 = document.all ? document.all["AjaxHolder_PostComment_RequiredFieldValidator2"] : document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator2");
AjaxHolder_PostComment_RequiredFieldValidator2.controltovalidate = "AjaxHolder_PostComment_tbName";
AjaxHolder_PostComment_RequiredFieldValidator2.errormessage = "请输入你的姓名";
AjaxHolder_PostComment_RequiredFieldValidator2.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_RequiredFieldValidator2.initialvalue = "";
var AjaxHolder_PostComment_Requiredfieldvalidator4 = document.all ? document.all["AjaxHolder_PostComment_Requiredfieldvalidator4"] : document.getElementById("AjaxHolder_PostComment_Requiredfieldvalidator4");
AjaxHolder_PostComment_Requiredfieldvalidator4.controltovalidate = "AjaxHolder_PostComment_CodeNumberTextBox";
AjaxHolder_PostComment_Requiredfieldvalidator4.errormessage = "请输入验证码";
AjaxHolder_PostComment_Requiredfieldvalidator4.display = "Dynamic";
AjaxHolder_PostComment_Requiredfieldvalidator4.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_Requiredfieldvalidator4.initialvalue = "";
var AjaxHolder_PostComment_RequiredFieldValidator3 = document.all ? document.all["AjaxHolder_PostComment_RequiredFieldValidator3"] : document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator3");
AjaxHolder_PostComment_RequiredFieldValidator3.controltovalidate = "AjaxHolder_PostComment_tbComment";
AjaxHolder_PostComment_RequiredFieldValidator3.errormessage = "请输入评论内容";
AjaxHolder_PostComment_RequiredFieldValidator3.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_RequiredFieldValidator3.initialvalue = "";
var AjaxHolder_PostComment_ValidationSummary1 = document.all ? document.all["AjaxHolder_PostComment_ValidationSummary1"] : document.getElementById("AjaxHolder_PostComment_ValidationSummary1");
AjaxHolder_PostComment_ValidationSummary1.showmessagebox = "True";
AjaxHolder_PostComment_ValidationSummary1.showsummary = "False";
//]]>
</script>


<script type="text/javascript">
<!--
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
// -->
</script>
        
<script type="text/javascript">
//<![CDATA[

document.getElementById('AjaxHolder_PostComment_ValidationSummary1').dispose = function() {
    Array.remove(Page_ValidationSummaries, document.getElementById('AjaxHolder_PostComment_ValidationSummary1'));
}
Sys.Application.initialize();

document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator1').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator1'));
}

document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator2').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator2'));
}

document.getElementById('AjaxHolder_PostComment_Requiredfieldvalidator4').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_Requiredfieldvalidator4'));
}

document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator3').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator3'));
}
//]]>
</script>
</form>
    <script type="text/javascript" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/ShowHidden.js"></script>    
	<span style="display: none;"><script language="javascript" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/click.htm"></script><a href="http://count.51yes.com/index.aspx?id=456984812" target="_blank"><img src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/count1.gif" alt="51YES网站统计系统" border="0" height="20" hspace="0" vspace="0" width="20"></a><iframe marginwidth="0" marginheight="0" hspace="0" vspace="0" src="epoll%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F_files/sa.txt" frameborder="0" height="0" scrolling="no" width="0"></iframe></span>
</body></html>