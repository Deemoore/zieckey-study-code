// cstring standard header
#pragma once
#ifndef _CSTRING_
#define _CSTRING_
#include <yvals.h>

#ifdef _STD_USING
 #undef _STD_USING
  #include <string.h>
 #define _STD_USING

#else /* _STD_USING */
 #include <string.h>
#endif /* _STD_USING */

 #ifndef RC_INVOKED
  #if _GLOBAL_USING
_STD_BEGIN

#if !defined(_WIN32_WCE)
/* These are not supported on CE */
using ::strcoll; using ::strerror; using ::strxfrm;
#endif

using ::size_t; using ::memchr; using ::memcmp;

using ::memcpy; using ::memmove; using ::memset;
using ::strcat; using ::strchr; using ::strcmp;
using ::strcpy; using ::strcspn;
using ::strlen; using ::strncat;
using ::strncmp; using ::strncpy; using ::strpbrk;
using ::strrchr; using ::strspn; using ::strstr;

#ifndef _WIN32_WCE
using ::strtok; using ::strxfrm;
#else
using ::strtok; 
#endif //!_WIN32_WCE
_STD_END
  #endif /* _GLOBAL_USING */
 #endif /* RC_INVOKED */

#endif /* _CSTRING_ */

/*
 * Copyright (c) 1992-2006 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
 V5.02:0009 */
