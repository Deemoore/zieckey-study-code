

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>
	将Socket应用程序从Unix向Windows移植中应注意的几点问题 - 信息安全网 - CSDN博客
</title>
	<script src="http://hi.images.csdn.net/js/public/jquery-1.2.3.pack.js" type="text/javascript"></script>
	<script src="http://hi.images.csdn.net/js/blog/SyntaxHighlighter/jquery.highlighter.js?v=20090609" type="text/javascript"></script>
	<script src="http://hi.images.csdn.net/js/blog/SyntaxHighlighter/highlighter.js?v=20090609" type="text/javascript"></script>
	<script src="/Scripts/common.js?version=20090916" type="text/javascript"></script>
	<link href="http://hi.images.csdn.net/css/marvin2/marvin2_1.css" type="text/css" rel="stylesheet" media="all"/><link href="http://hi.images.csdn.net/css/csdn_favbykimi.css" type="text/css" rel="stylesheet" media="all" /><link rel="Shortcut Icon" href="http://profile.csdn.net/amh/picture/1.ico"/><link href="http://feeds.feedsky.com/csdn.net/amh" title="RSS" type="application/rss+xml" rel="alternate" /><style type="text/css">BODY {
    SCROLLBAR-FACE-COLOR:#D1EC67;
    SCROLLBAR-HIGHLIGHT-COLOR:#FFFFFF;
    SCROLLBAR-3DLIGHT-COLOR:#E3F4A3;
    SCROLLBAR-DARKSHADOW-COLOR:#406905;
    SCROLLBAR-SHADOW-COLOR:#6E9C0C;
    SCROLLBAR-ARROW-COLOR:#FDFDFB;
    SCROLLBAR-TRACK-COLOR:#DCF4A6;
}


div,select,input{font-size:12px;word-wrap:break-word;}
div.block {
  background-image: url(images/main_background.gif);
  background-position: top left;
  background-repeat: repeat-y;
  font-size: 12px;
  text-align: justify;
}

div.block_footer {
  background-image: url(images/day_footer.gif);
  background-position: top left;
  background-repeat: no-repeat;
  height: 67px;
}

div.post {
  padding-left: 0px;
}

.dateTitle{color:#808080;font-size:14px;font-weight:bold;line-height:280%}
div.posttitle {
  color: #73AF1D;
    font-family: "ms shell dlg";
    font-size: 14px;
    font-weight: bold;
}

.posttitle{background:#FFF url(http://www.donews.net/images/www_donews_net/dodo/54776/o_title1.gif) no-repeat;height:30px;padding-left:30px}
div.postText{line-height:160%;font-size:12px;}
.posttitle a:visited, .posttitle a:active, .posttitle a:link {  
    color:#73AF1D;
    text-decoration : none;
    border-bottom:1px dotted #73AF1D;padding:2px;
}

.posttitle a:hover {
    color: #73AF1D;
    text-decoration : none;padding:3px;
    border-bottom:1px dotted #73AF1D;
}
.postFoot{line-height:120%;border-bottom:1px dotted #808080;font-size:12px;}
div.itemdesc {
  color: #808080;
  font-size: 12px;
    text-transform: uppercase;
}

div.seperator {
  
  background-position: top left;
  background-repeat: no-repeat;
  margin: 15px 0px 10px 0px;
}

div.entrylistitem {
  padding-left: 20px;
  padding-bottom: 10px;
}

a.entrylisttitle, a.entrylisttitle:visited, a.entrylisttitle:link, a.entrylisttitle:active {
  color: #FF6600;
    font-size: 14px;
    font-weight: bold;
}

div.moreinfo {
  font-size: 12px;
  text-align: justify;
}

div.moreinfotitle {
    color: #FF2a00;
    font-size: 12px;
    font-weight: bold;
}

div.comments {
  font-size: 12px
}

div.comment {
    background-color: #FBFBFB;font-size:12px;
  border: 0px dotted #DDDDDD;
  margin: 10px 0px 10px 0px;
  padding: 10px;
}

div.comment_author {
  margin: 5px 0px 5px 0px;font-size:12px;
}

div.comment_content {
  margin: 5px 0px 5px 0px;font-size:12px;
}

#postcomment {
    border: 0px solid #DDDDDD;
    background-color: #FBFBFB;
  font-size: 12px;
  padding: 10px;
  text-align: justify;
  margin-top: 15px;
  width: 435px;
}

#postcomment div {
    color: #808080;
  font-size: 12px;
    font-weight: bold;
  margin: 5px 0px 5px 0px;
}

#postcomment input.text, textarea {
  border: 1px solid #DDDDDD;
  font-size: 12px;
}

input.text {
    width : 300px;  
}

textarea {
    width : 300px;
    height : 200px;  
}

#relatedlinks ul {
    list-style : none;
    margin-left : 10px;
    padding : 0px;
}

span.highlight
{
    background-color:Yellow;      
}
.block_title{font-size:14px;font-weight:bold}
.code{float:left;width:90%;padding:10px;border:1px dotted #d9d9d9;background:#f4f4f4;}
.postFoot{clear:both;padding-top:6px}
br{clear:both;}</style></head>
<body id="defaultuser">
	<div id="csdnblog_allwrap">
	    <div id="csdnblog_midwrap">
		    
<div id="csdnblog_header">
    <h1><a href="http://blog.csdn.net/amh">信息安全网</a></h1><h2>     提供一流的安全咨询与安全服务,保您网络安全.          </h2>
    <ul id="personalnav">
		<li style="display:none;"><a id="a_login" href="http://passport.csdn.net/UserLogin.aspx">登录</a></li>
		<li style="display:none;"><a id="a_register" href="http://passport.csdn.net/CSDNUserRegister.aspx">注册</a></li>
		<li style="display:none;"><a id="a_welcome" href="http://hi.csdn.net/" target="_blank">欢迎</a></li>
		<li style="display:none;"><a id="a_exit" href="http://writeblog.csdn.net/Signout.aspx">退出</a></li>
		<li style="display:none;"><a id="a_myblog" href="http://blog.csdn.net/">我的博客</a></li>
		<li style="display:none;"><a id="a_configure" href="http://writeblog.csdn.net/configure.aspx" target="_blank">配置</a></li>
		<li style="display:none;"><a id="a_postedit" href="http://writeblog.csdn.net/PostEditPlain.aspx" target="_blank">写文章</a></li>
		<li style="display:none;"><a id="a_postlist" href="http://writeblog.csdn.net/PostList.aspx" target="_blank">文章管理</a></li>
		<li style="display:none;"><a id="a_bloghome" href="http://blog.csdn.net" target="_blank">博客首页</a></li>
	</ul>
    <ul id="blogsearchsty">
		<li><input id="inputSearch" type="text" class="bolgsearch"/></li>
		<li class="selectsty">
			<select name="Search:ddlSearchScope" id="Search_ddlSearchScope">
				<option value="all">全站</option>
				<option value="amh">当前博客</option>
			</select>
		</li>
		<li><input type="button" id="buttonSearch" value="搜索" class="bolggobtn" /></li>
	</ul>
    <ul id="menu">
		<li><a href="http://hi.csdn.net/amh" target="_blank">空间</a></li>
		<li><a class="on" href="http://blog.csdn.net/amh">博客</a></li>
		<li><a href="http://hi.csdn.net/!s/friend/list/amh" target="_blank">好友</a></li>
		<li><a href="http://hi.csdn.net/!s/album/list/amh" target="_blank">相册</a></li>
		<li><a class="last" href="http://hi.csdn.net/!s/wall/to/amh" target="_blank">留言</a></li>
	</ul>
</div>
<script type="text/javascript">
	var CurrentUserName = 'amh';
</script>
		    
<div id="csdnblog_sidebar">
	<div class="gutter">
		<div class="aboutauthor">
			<dl>
				<dt>用户操作</dt>
				<dd class="middle">
					<a href="http://hi.csdn.net/!s/wall/to/amh" target="_blank">[留言]</a>&nbsp;
					<a href="http://hi.csdn.net/!s/msg/to/amh" target="_blank">[发消息]</a>&nbsp;
					<a href="http://hi.csdn.net/!s/friend/add/amh" target="_blank">[加为好友]</a>&nbsp;
				</dd>
				<span id="userInfo"></span>
				<span id="SubscriptionList">
					<dt>订阅我的博客</dt>
					<dd>
						<a href="http://feeds.feedsky.com/csdn.net/amh">
							<img border="0" alt="XML聚合" src="http://img.feedsky.com/feeds/csdn.net/amh/sc/gif"/>
						</a>&nbsp;&nbsp;
						<a href="http://feeds.feedsky.com/csdn.net/amh" target="_blank">
							<img border="0" alt="FeedSky" src="http://hi.images.csdn.net/images/blog/feedsky.gif"/>
						</a>
					</dd>
					<dd>
						<a href="http://www.xianguo.com/subscribe.php?url=http://feeds.feedsky.com/csdn.net/amh" target="_blank">
							<img border="0" alt="订阅到鲜果" src="http://hi.images.csdn.net/images/blog/rss_xianguo.jpg"/>
						</a>
					</dd>
					<dd>
						<a href="http://fusion.google.com/add?feedurl=http://feeds.feedsky.com/csdn.net/amh" target="_blank">
							<img border="0" alt="订阅到Google" src="http://hi.images.csdn.net/images/blog/rss_google.gif"/>
						</a>
					</dd>
					<dd>
						<a href="http://www.zhuaxia.com/add_channel.php?url=http://feeds.feedsky.com/csdn.net/amh" target="_blank">
							<img border="0" alt="订阅到抓虾" src="http://hi.images.csdn.net/images/blog/rss_zhuaxia.gif"/>
						</a>
					</dd>
				</span>
				<dt>
					amh的公告
				</dt>
				<dd>你们好呀！
欢迎你来到我们个人网站!
我的真名：安美洪 ......
联系方式：anmeihong@sina.com  
我的 QQ：18184412</dd>
				<dt>文章分类</dt>
				<dd>
					<div class="publiclist_sidebar">
						<ul><li><a href="/amh/category/59920.aspx/rss"><img src="http://hi.images.csdn.net/images/blog/rss.gif" alt="(RSS)"></a><a href="/amh/category/59920.aspx" title="在这，你能找到相关编程的技术文章，这是我在网上收集的哟。讨论请联系
anmeihong@sina.com">编程技术</a></li><li><a href="/amh/category/59910.aspx/rss"><img src="http://hi.images.csdn.net/images/blog/rss.gif" alt="(RSS)"></a><a href="/amh/category/59910.aspx" title="这是我收集的有关安全方面的文章
有讨论的话，请联系
anmeihong@sina.com">精典文章</a></li><li><a href="/amh/category/147566.aspx/rss"><img src="http://hi.images.csdn.net/images/blog/rss.gif" alt="(RSS)"></a><a href="/amh/category/147566.aspx" title="也许变向可称为网络日记吧">我的日志</a></li><li><a href="/amh/category/59908.aspx/rss"><img src="http://hi.images.csdn.net/images/blog/rss.gif" alt="(RSS)"></a><a href="/amh/category/59908.aspx" title="这是我自己在学习中所写的原创文章
有什么意见请联系
anmeihong@sina.com">我的原创</a></li></ul>
					</div>
				</dd>
				
				<dt>安全公司</dt><dd><a href="http://www.chinacisg.com/" target="_blank">CISG网安中心</a></dd><dd><a href="http://www.30san.com/" target="_blank">三○盛安</a></dd><dd><a href="http://www.neusoft.com/" target="_blank">东软集团</a></dd><dd><a href="http://www.netchina.com.cn/" target="_blank">中网公司</a></dd><dd><a href="http://www.sky.net.cn/" target="_blank">众达天网 </a></dd><dd><a href="http://www.yishang.com.cn/" target="_blank">北京易尚</a></dd><dd><a href="http://www.westone.com.cn/home.php" target="_blank">卫士通</a></dd><dd><a href="http://www.venustech.com.cn/" target="_blank">启明星辰</a></dd><dd><a href="http://www.gold-tel.com/ " target="_blank">国腾信安</a></dd><dd><a href="http://www.topsec.com.cn" target="_blank">天融信</a></dd><dd><a href="http://www.is-one.net/" target="_blank">安氏</a></dd><dd><a href="http://www.anmeng.com.cn/" target="_blank">安盟</a></dd><dd><a href=" http://www.nesec.com.cn " target="_blank">川大能士</a></dd><dd><a href="http://www.foundersec.com/" target="_blank">方正安全</a></dd><dd><a href="http://www.cnns.net/" target="_blank">深圳安络</a></dd><dd><a href="http://www.unismmw.net/" target="_blank">清华紫光顺风信安</a></dd><dd><a href="http://www.gateguard.com.cn/main.asp" target="_blank">盖特佳安全</a></dd><dd><a href="http://www.digitalchina.com/" target="_blank">神州数码</a></dd><dd><a href="http://www.nsfocus.com/homepage/index.htm" target="_blank">绿盟科技</a></dd><dd><a href="http://www.kingnet.biz/" target="_blank">金诺网安</a></dd><dt>安全网站</dt><dd><a href="http://www.genocide2600.com/" target="_blank">genocide2600</a></dd><dd><a href="http://www-900.ibm.com/developerWorks/cn/cnpapers.nsf/security-papers-bynewest?OpenView&Start=20&Count=20" target="_blank">IBM安全资料</a></dd><dd><a href="http://openssl.cn/" target="_blank">OPENSSL</a></dd><dd><a href="http://www.packetstormsecurity.com/" target="_blank">packetstormsecurity</a></dd><dd><a href="http://www.securiteam.com/" target="_blank">securiteam</a></dd><dd><a href="http://www.patching.net/" target="_blank">中华补天网</a></dd><dd><a href="http://www.istroop.org/" target="_blank">信安团队</a></dd><dd><a href="http://www.infosecurity.org.cn/" target="_blank">信息安全组织</a></dd><dd><a href="http://infosec.cs.pku.edu.cn/courses.htm" target="_blank">北大信安</a></dd><dd><a href="http://www.77169.org/" target="_blank">华夏黑客联盟</a></dd><dd><a href="http://www.cnpaf.net/" target="_blank">协议分析网</a></dd><dd><a href="http://www.xfocus.net/" target="_blank">安全焦点</a></dd><dd><a href="http://www.netxeyes.com/main.html" target="_blank">小榕软件</a></dd><dd><a href="http://www.milw0rm.com/" target="_blank">溢出代码</a></dd><dd><a href="http://www.rising.com.cn/" target="_blank">瑞星杀毒</a></dd><dd><a href="http://www.pediy.com/" target="_blank">看雪学宛</a></dd><dd><a href="http://www.nsfocus.com/" target="_blank">绿盟科技</a></dd><dd><a href="http://www.quzheng.com/" target="_blank">计算机取证网</a></dd><dd><a href="http://www.nsc.org.cn/index.asp" target="_blank">计算机安全</a></dd><dd><a href="http://www.eviloctal.com/forum/index.php" target="_blank">邪恶八进制</a></dd><dd><a href="http://www.hackbase.com/" target="_blank">黑客基地</a></dd><dd><a href="http://www.hacker.com.cn/" target="_blank">黑客防线</a></dd><dt>好友链接</dt><dd><a href="http://RedCode.Hackvip.Cn " target="_blank">!angel's blog</a></dd><dd><a href="http://zhouzhen.blogchina.com/" target="_blank">htzhouzhen's blog</a></dd><dd><a href="http://blog.securitycode.org/" target="_blank">ICBM-BLOG</a></dd><dd><a href="http://blog.csdn.net/sagely" target="_blank">sagely's blog</a></dd><dd><a href="http://sunlion.3322.org/" target="_blank">sunlion's blog</a></dd><dd><a href="http://blog.csdn.net/sunwear" target="_blank">sunwear's blog</a></dd><dd><a href="http://www.xhacker.cn/xack3r/index.php" target="_blank">xack3</a></dd><dd><a href="http://www.xyzreg.net" target="_blank">xyzreg's BLOG</a></dd><dd><a href="http://www.59hao.com/chx" target="_blank">优网编程</a></dd><dd><a href="http://www.icyfoxlovelace.com/" target="_blank">冰狐浪子</a></dd><dd><a href="http://www.eviloctal.com/weblog/blog.php" target="_blank">冰血封情</a></dd><dd><a href="http://feng.cnblog.com.cn/" target="_blank">勇敢的风</a></dd><dd><a href="http://www.wujie.name " target="_blank">吴杰's Blog</a></dd><dd><a href="http://www.97545.net/" target="_blank">新龙门客栈</a></dd><dd><a href="http://www.huaihuai.ful.cn/" target="_blank">无双坏坏</a></dd><dd><a href="http://Blog.Csdn.Net/Kgdiwss" target="_blank">明天去要饭</a></dd><dd><a href="http://www.spr1t3.com/" target="_blank">精灵's Blog</a></dd><dd><a href="http://blog.donews.com/yezhu/" target="_blank">谢朝晔</a></dd><dd><a href="http://www.blacksky.cn/" target="_blank">风泽黑色天空</a></dd><dt>软件开发</dt><dd><a href="http://www.csdn.net/" target="_blank">CSDN开发</a></dd><dd><a href="http://www.java-cn.com/index.html" target="_blank">JAVA中文站</a></dd><dd><a href="http://bbs.chinajavaworld.com/" target="_blank">JAVA开发论坛</a></dd><dd><a href="http://www.cn-java.com/" target="_blank">JAVA技术</a></dd><dd><a href="http://www.javaresearch.org/" target="_blank">JAVA研究</a></dd><dd><a href="http://www.jspcn.net/index.html" target="_blank">jspcn</a></dd><dd><a href="http://www.jspsky.com/Information/index.jsp" target="_blank">jsp天空</a></dd><dd><a href="http://www.vczx.com/" target="_blank">VC在线</a></dd><dd><a href="http://www.pcvc.net/" target="_blank">VC大本营</a></dd><dd><a href="http://www.vchelp.net/vchelp/vchelp.asp" target="_blank">VC开发指南</a></dd><dd><a href="http://www.xiaozhou.net/" target="_blank">VC源动力</a></dd><dd><a href="http://www.vckbase.com/" target="_blank">VC知识库</a></dd><dd><a href="http://www.programsalon.com/download.asp?type_id=2" target="_blank">加解密源码</a></dd><dd><a href="http://www.moon-soft.com/download/" target="_blank">月光源码</a></dd><dd><a href="http://www.cnzz.cn/" target="_blank">站长站</a></dd><dd><a href="http://www.programfan.com/" target="_blank">编程爱好者</a></dd>
				<dt>存档</dt>
				<dd>
					<div class="publiclist_sidebar">
						<ul><li><a href="/amh/archive/2009/02.aspx">2009年02月(3)</a></li><li><a href="/amh/archive/2008/10.aspx">2008年10月(1)</a></li><li><a href="/amh/archive/2006/11.aspx">2006年11月(2)</a></li><li><a href="/amh/archive/2006/10.aspx">2006年10月(1)</a></li><li><a href="/amh/archive/2006/08.aspx">2006年08月(1)</a></li><li><a href="/amh/archive/2006/06.aspx">2006年06月(1)</a></li><li><a href="/amh/archive/2006/05.aspx">2006年05月(2)</a></li><li><a href="/amh/archive/2006/04.aspx">2006年04月(3)</a></li><li><a href="/amh/archive/2006/03.aspx">2006年03月(7)</a></li><li><a href="/amh/archive/2006/02.aspx">2006年02月(5)</a></li><li><a href="/amh/archive/2006/01.aspx">2006年01月(5)</a></li><li><a href="/amh/archive/2005/12.aspx">2005年12月(17)</a></li><li><a href="/amh/archive/2005/11.aspx">2005年11月(2)</a></li><li><a href="/amh/archive/2005/10.aspx">2005年10月(7)</a></li><li><a href="/amh/archive/2005/09.aspx">2005年09月(7)</a></li><li><a href="/amh/archive/2005/08.aspx">2005年08月(5)</a></li><li><a href="/amh/archive/2005/07.aspx">2005年07月(8)</a></li><li><a href="/amh/archive/2005/06.aspx">2005年06月(11)</a></li><li><a href="/amh/archive/2005/05.aspx">2005年05月(17)</a></li><li><a href="/amh/archive/2005/04.aspx">2005年04月(32)</a></li><li><a href="/amh/archive/2005/03.aspx">2005年03月(32)</a></li><li><a href="/amh/archive/2005/02.aspx">2005年02月(9)</a></li><li><a href="/amh/archive/2005/01.aspx">2005年01月(16)</a></li><li><a href="/amh/archive/2004/12.aspx">2004年12月(45)</a></li><li><a href="/amh/archive/2004/11.aspx">2004年11月(102)</a></li><li><a href="/amh/archive/2004/10.aspx">2004年10月(24)</a></li></ul>
					</div>
				</dd>
			</dl>
		</div>
	</div>
</div>

		    
<div id="csdnblog_content">
	<div class="gutter">
		<div class="default_contents">
			<div class="user_article">
				<script type="text/javascript" src="http://hi.images.csdn.net/js/blog/LoadFeedbackCount.js"></script>
				<h1 class="title_txt">
					<img src="http://hi.images.csdn.net/images/blog/authorship.gif" border="0" width="15" height="16" alt="原创"/>&nbsp;
					将Socket应用程序从Unix向Windows移植中应注意的几点问题
					<cite class="fav_csdnstylebykimi">
						<a href="JavaScript:d=document;t=d.selection?(d.selection.type!='None'?d.selection.createRange().text:''):(d.getSelection?d.getSelection():'');void(saveit=window.open('http://wz.csdn.net/storeit.aspx?t='+escape(d.title)+'&u='+escape(d.location.href)+'&c='+escape(t),'saveit','scrollbars=no,width=590,height=300,left=75,top=20,status=no,resizable=yes'));saveit.focus();" class="fav_csdnstylebykimi" title="收藏到我的网摘中，并分享给我的朋友">收藏</a>
					</cite>
					
				</h1>
				<div class="blogstory">
					<script type="text/javascript">
						document.body.oncopy = function() {
							if (window.clipboardData) {
								setTimeout(function() {
									var text = clipboardData.getData("text"); 
									if (text && text.length>300) {
										text = text + "\r\n\n本文来自CSDN博客，转载请标明出处：" + location.href;
										clipboardData.setData("text", text); 
									}
								}, 100);
							}
						}
					</script>
					<script type="text/javascript">function StorePage(){d=document;t=d.selection?(d.selection.type!='None'?d.selection.createRange().text:''):(d.getSelection?d.getSelection():'');void(keyit=window.open('http://www.365key.com/storeit.aspx?t='+escape(d.title)+'&u='+escape(d.location.href)+'&c='+escape(t),'keyit','scrollbars=no,width=475,height=575,left=75,top=20,status=no,resizable=yes'));keyit.focus();}</script>
					<table width="100%" border="0"><tbody><tr><td width="100%" height="26"><font face="黑体" size="6"><p align="center"><font face="黑体" size="4"><em><strong>将Socket应用程序从Unix向Windows移植中应注意的几点问题</strong></em></font><font face="宋体" size="1"></font></p></font><font face="黑体" size="4"><em><strong>将Socket应用程序从Unix向Windows移植中应注意的几点问题</strong></em></font><font face="宋体" size="1"></font></td></tr><tr><td width="100%" height="15"><font face="楷体_GB2312" size="3"><p align="center">山东省淄博市建设银行科技部 孙成山</p></font></td></tr><tr><td valign="top" width="100%"><font face="宋体" size="3"><p align="justify">&nbsp;&nbsp;&nbsp; 套接字（<font face="宋体, MS Song" size="3">socket</font><font face="宋体" size="3">）当今已成为最流行的网络通信应用程序接口。套接字最初是由加利福尼亚大学</font><font face="宋体, MS Song" size="3">Berkeley</font><font face="宋体" size="3">分校为</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">操作系统开发的网络通信接口，后来它又被移植到</font><font face="宋体, MS Song" size="3">DOS</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统，特别是近几年来互联网络在全世界范围内被广泛普及并且增长迅猛，进一步奠定了它在网络通信程序开发领域的主宰地位。跨系统网络互联的呼声在我国也越来越高。近来，在开发的银行与证券联网系统中，我们尝试做了由</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">到</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">通信应用程序的移植，有所体会，望能将移植过程中应该注意的几点问题与热心于这方面工作的人们共同作以探讨，以期能起到抛砖引玉的作用。<ol><font face="宋体" size="5"><b><li>修改头文件的定义 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font></p></font><font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font><b><font size="5"><li>Windows Sockets DLL<font face="宋体" size="5">初始化与资源释放 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b></li></font><font face="宋体" size="5">初始化与资源释放 </font></b></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font></p></font><font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font><b><font size="5"><li>Windows Sockets DLL<font face="宋体" size="5">初始化与资源释放 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b></li></font><font face="宋体" size="5">初始化与资源释放 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font><font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font><font face="宋体, MS Song" size="3"> </font></ol></font></p></font><font face="宋体, MS Song" size="3">socket</font><font face="宋体" size="3">）当今已成为最流行的网络通信应用程序接口。套接字最初是由加利福尼亚大学</font><font face="宋体, MS Song" size="3">Berkeley</font><font face="宋体" size="3">分校为</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">操作系统开发的网络通信接口，后来它又被移植到</font><font face="宋体, MS Song" size="3">DOS</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统，特别是近几年来互联网络在全世界范围内被广泛普及并且增长迅猛，进一步奠定了它在网络通信程序开发领域的主宰地位。跨系统网络互联的呼声在我国也越来越高。近来，在开发的银行与证券联网系统中，我们尝试做了由</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">到</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">通信应用程序的移植，有所体会，望能将移植过程中应该注意的几点问题与热心于这方面工作的人们共同作以探讨，以期能起到抛砖引玉的作用。<ol><font face="宋体" size="5"><b><li>修改头文件的定义 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font></p></font><font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font><b><font size="5"><li>Windows Sockets DLL<font face="宋体" size="5">初始化与资源释放 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b></li></font><font face="宋体" size="5">初始化与资源释放 </font></b></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font></p></font><font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font><b><font size="5"><li>Windows Sockets DLL<font face="宋体" size="5">初始化与资源释放 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b></li></font><font face="宋体" size="5">初始化与资源释放 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font><font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font><font face="宋体, MS Song" size="3"> </font></ol></font><font face="宋体" size="5"><b><li>修改头文件的定义 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font></p></font><font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font><b><font size="5"><li>Windows Sockets DLL<font face="宋体" size="5">初始化与资源释放 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b></li></font><font face="宋体" size="5">初始化与资源释放 </font></b></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序中包含头文件的语句为</font><font face="宋体, MS Song" size="3">#include&lt;sys/socket.h&gt;</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序中相应语句应为</font><font face="宋体, MS Song" size="3"> #include&lt;winsock.h&gt;</font><font face="宋体" size="3">。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font></p></font><font face="宋体" size="3">的实现由两部分组成，即开发组件与运行组件。开发组件是供程序员开发</font><font size="3">Windows Sockets </font><font face="宋体" size="3">应用程序使用的，它包括</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序接口函数库、头文件以及一些介绍</font><font size="3">Windows Sockets</font><font face="宋体" size="3">实现的文档，其中头文件</font><font size="3">winsock.h</font><font face="宋体" size="3">中包含了</font><font size="3">Windows Sockets </font><font face="宋体" size="3">实现所定义的宏、常数值、数据结构和函数调用接口原型。</font><font size="3">Winsock.h</font><font face="宋体" size="3">是编写</font><font size="3">Windows Sockets</font><font face="宋体" size="3">应用程序必须包含的头文件。</font><b><font size="5"><li>Windows Sockets DLL<font face="宋体" size="5">初始化与资源释放 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b></li></font><font face="宋体" size="5">初始化与资源释放 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的接口函数中，提供了</font><font face="宋体, MS Song" size="3">WSAStartup()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSACleanup()</font><font face="宋体" size="3">两个函数，用于在程序开始时初始化</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">和程序结束时释放</font><font face="宋体, MS Song" size="3">Windows Sockets DLL</font><font face="宋体" size="3">资源，它们是编写</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序时必须使用的两个函数。</font><b><font face="宋体" size="5"><li>将套接字的类型由<font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">int</font><font face="宋体" size="5">改为</font><font face="宋体, MS Song" size="5">SOCKET </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，套接字类型定义为</font><font face="宋体, MS Song" size="3">int</font><font face="宋体" size="3">型，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中，套接字类型被定义为</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">型，即</font><font face="宋体, MS Song" size="3">unsigned int</font><font face="宋体" size="3">型。</font><font face="宋体" size="5"><b><li>错误码的获取与设置 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，获取、设置错误码使用全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应将其改为用函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">。</font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">为了与多线程环境兼容，提供了两个出错处理函数</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">WSASetLastError()</font><font face="宋体" size="3">来获取与设置当前线程的最近错误号，而不再使用</font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中的全局变量</font><font face="宋体, MS Song" size="3">errno</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">h_errno</font><font face="宋体" size="3">。</font><font face="宋体" size="5"><b><li>关闭套接字 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中使用</font><font face="宋体, MS Song" size="3">close()</font><font face="宋体" size="3">函数来关闭套接字，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则用</font><font face="宋体, MS Song" size="3">closesocket()</font><font face="宋体" size="3">函数。</font><font face="宋体" size="5"><b><li>对套接字的控制 <font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b></li></b></font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font></p></font><font face="宋体, MS Song" size="3">Unix</font><font face="宋体" size="3">系统中，使用</font><font face="宋体, MS Song" size="3">ioctl()</font><font face="宋体" size="3">函数和</font><font face="宋体, MS Song" size="3">fcntl()</font><font face="宋体" size="3">函数实现对套接字的控制，而在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">系统中则应使用</font><font face="宋体, MS Song" size="3">ioctlsocket()</font><font face="宋体" size="3">函数。</font><b><font size="5"><li>getsockopt()<font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b></li></font><font face="宋体" size="5">和</font><font size="5">setsockopt()</font><font face="宋体" size="5">函数的处理 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">和</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中对这两个函数提供的支持不同。在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中</font><font face="宋体, MS Song" size="3">getsockopt()</font><font face="宋体" size="3">与</font><font face="宋体, MS Song" size="3">setsockopt()</font><font face="宋体" size="3">不支持的</font><font face="宋体, MS Song" size="3">Berkeley Sockets</font><font face="宋体" size="3">选项有：<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVLOWAT </font><font face="宋体" size="3">接受低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_RCVTIMEO </font><font face="宋体" size="3">接受超时<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDLOWAT </font><font face="宋体" size="3">发送低潮标志<p align="justify"><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_SNDTIMEO </font><font face="宋体" size="3">发送超时<p align="justify"><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">IP_OPTIONS </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">IP</font><font face="宋体" size="3">头中的选项<p align="justify"><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">TCP_MAXSEG </font><font face="宋体" size="3">取得</font><font face="宋体, MS Song" size="3">TCP</font><font face="宋体" size="3">最大尺寸<p align="justify"><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ACCEPTCONN </font><font face="宋体" size="3">套接字正在监听<p align="justify"><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_ERROR </font><font face="宋体" size="3">取错误状态并清除<p align="justify"><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">SO_TYPE </font><font face="宋体" size="3">套接字类型<p align="justify">使用不支持的选项将返回错误码<font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font></p></font><font face="宋体, MS Song" size="3">WSAENOPROTOOPT</font><font face="宋体" size="3">，它由</font><font face="宋体, MS Song" size="3">WSAGetLastError()</font><font face="宋体" size="3">函数返回。<p align="justify">由于提供的支持不同，进行移植时若有必要应修改相应的源程序。</p></font><b><font face="宋体" size="5"><li>使用宏<font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b></li></font><font face="宋体, MS Song" size="5">FD_XXX</font><font face="宋体" size="5">来控制</font><font face="宋体, MS Song" size="5">fd_set</font><font face="宋体" size="5">结构 </font></b><font face="宋体" size="3"><p align="justify">由于<font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets </font><font face="宋体" size="3">某些函数在接口上虽然与</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">一致，但是它们的内部实现却不一样，例如，在函数</font><font face="宋体, MS Song" size="3">select()</font><font face="宋体" size="3">的参数中，</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">实现套接字集合使用的是位掩码，但在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">中却是使用一个</font><font face="宋体, MS Song" size="3">SOCKET</font><font face="宋体" size="3">的数组。虽然套接字的集合仍由</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">类型表示，但在</font><font face="宋体, MS Song" size="3">Unix Sockets </font><font face="宋体" size="3">源文件中直接修改</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">结构的代码在</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">环境下将不能正常工作。因此</font><font face="宋体, MS Song" size="3">,</font><font face="宋体" size="3">在进行移植时应将源程序中对结构</font><font face="宋体, MS Song" size="3">fd_set</font><font face="宋体" size="3">的直接修改改为通过使用</font><font face="宋体, MS Song" size="3">FD_XXX</font><font face="宋体" size="3">宏来修改。</font><b><font face="宋体" size="5"><li>应在<font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font></li></font><font face="宋体, MS Song" size="5">Windows Sockets</font><font face="宋体" size="5">程序中尽量使用</font><font face="宋体, MS Song" size="5">WSA</font><font face="宋体" size="5">宏 </font></b><font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的头文件中定义了许多以</font><font face="宋体, MS Song" size="3">WSA</font><font face="宋体" size="3">开头的宏，在程序中使用这些宏，可以大大地增加程序的可读性。例如：</font><font size="3"><p align="justify">errno = WSAGetLastError()<font face="宋体" size="3">；</font></p></font><font face="宋体" size="3">；</font><font size="3"><p align="justify">if (errno = WSAEWOULDBLOCK<font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font></p></font><font face="宋体" size="3">） {<p align="justify"><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font></p></font><font size="3"><font face="宋体, MS Song">&hellip;&hellip;</font></font><font face="宋体" size="3"><p align="justify">}</p><p align="justify">这些宏是<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">就应用程序实现过程中可能会出现的错误，为便于程序的读写而专门做出的扩充，它是</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">应用程序编写人员开发程序时共同遵循的规范，因此应尽量使用这些宏，以增加程序的可读性。</font><font face="宋体" size="5"><b><li>阻塞调用的处理 <font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font></li></b></font><font size="3"><p align="justify">Windows<font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font></p></font><font face="宋体" size="3">是非抢先多任务环境，各任务之间的切换是通过消息驱动的，如果一个应用程序不能主动放弃其控制权，别的应用程序就不能够执行，这一点与</font><font size="3">Unix</font><font face="宋体" size="3">操作系统有着本质的区别。对于从</font><font size="3">Unix Sockets</font><font face="宋体" size="3">环境中移植来的应用程序来说，阻塞问题必须考虑。<p align="justify">为解决阻塞问题，<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font></p></font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">特增设了如下几个阻塞处理函数：</font><font size="3"><p align="justify">WSAIsBlocking() <font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font></p></font><font face="宋体" size="3">检测阻塞调用是否正在进行<p align="justify"><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSACancelBlockingCall() </font><font face="宋体" size="3">取消一个正在进行的阻塞调用<p align="justify"><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font></p></font><font face="宋体, MS Song" size="3">WSASetBlocking() </font><font face="宋体" size="3">设置自己的阻塞处理例程<p align="justify"><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font></p></font><font face="宋体, MS Song" size="3">WSAUnhookBlockingHook() </font><font face="宋体" size="3">恢复默认的阻塞处理例程<p align="justify">为不影响原来环境中的阻塞处理例程，在安装自己的阻塞处理例程时，应注意保存返回的先前安装的阻塞处理例程的程序实例指针，并在处理结束后恢复。</p></font><font face="宋体" size="5"><b><li>尽量将阻塞调用改为基于消息的异步操作<font face="宋体, MS Song" size="3"> </font></li></b></font><font face="宋体, MS Song" size="3"> </font><p>　<font face="宋体" size="3"><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">网络程序设计中，尽管它允许阻塞操作，但是一个阻塞可能阻塞整个</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">环境，而在</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">程序中，套接字的默认操作模式却是阻塞的。</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">为了支持</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">消息驱动机制，对网络事件采用了基于消息的异步存取策略，较好的解决了阻塞问题。为此，建议最好将源程序中的阻塞调用改为基于消息的异步操作。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">为实现异步存取操作增设了如下的有关函数：<blockquote><font size="3"><p align="justify">WSAAsyncSelect() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSAAsyncGetXByY() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSACancelAsyncRequest() <font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></p></font><font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></blockquote></font></p></font></p></font></p><p align="justify">在<font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">网络程序设计中，尽管它允许阻塞操作，但是一个阻塞可能阻塞整个</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">环境，而在</font><font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">程序中，套接字的默认操作模式却是阻塞的。</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">为了支持</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">消息驱动机制，对网络事件采用了基于消息的异步存取策略，较好的解决了阻塞问题。为此，建议最好将源程序中的阻塞调用改为基于消息的异步操作。</font><font size="3"><p align="justify">Windows Sockets<font face="宋体" size="3">为实现异步存取操作增设了如下的有关函数：<blockquote><font size="3"><p align="justify">WSAAsyncSelect() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSAAsyncGetXByY() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSACancelAsyncRequest() <font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></p></font><font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></blockquote></font></p></font></p><p align="justify">Windows Sockets<font face="宋体" size="3">为实现异步存取操作增设了如下的有关函数：<blockquote><font size="3"><p align="justify">WSAAsyncSelect() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSAAsyncGetXByY() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSACancelAsyncRequest() <font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></p></font><font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></blockquote></font></p><blockquote><font size="3"><p align="justify">WSAAsyncSelect() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">select()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSAAsyncGetXByY() <font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font></p></font><font face="宋体" size="3">标准</font><font size="3">Berkeley</font><font face="宋体" size="3">函数</font><font size="3">getXbyY()</font><font face="宋体" size="3">的异步版本</font><font size="3"><p align="justify">WSACancelAsyncRequest() <font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></p></font><font face="宋体" size="3">取消函数</font><font size="3">WSAAsyncGetXByY()</font><font face="宋体" size="3">执行中的实例<p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></font></blockquote><p align="justify">由<font face="宋体, MS Song" size="3">Unix Sockets</font><font face="宋体" size="3">应用程序向</font><font face="宋体, MS Song" size="3">Windows Sockets</font><font face="宋体" size="3">的移植是一件比较繁琐的工作，在移植中除了以上与</font><font face="宋体, MS Song" size="3">Sockets</font><font face="宋体" size="3">具体实现直接相关的几点外，还应注意程序开发环境的的差异，这时程序上也应作一些相应的调整，例如，在</font><font face="宋体, MS Song" size="3">Windows</font><font face="宋体" size="3">应用程序中有关的一些指针都应设为</font><font face="宋体, MS Song" size="3">FAR</font><font face="宋体" size="3">类型等，这里就不再一一赘述</font></p></td></tr></tbody></table>
					<p class="right articalinfo">
						发表于 @ 2005年03月20日　17:26:00&nbsp;&#124;
						<a id="a_comment" href="#FeedBack" Title = "评论">
							评论(
							<span id="FeedbackCount_324887">loading...</span>
							<script type="text/javascript">
								AddFeedbackCountStack("324887")
							</script>)
						</a>&#124;
						<span style="display:none;"><a id="a_postedit" href="http://writeblog.csdn.net/PostEdit.aspx?entryId=324887" title="编辑">编辑</a>&#124</span>
						<a href='m&#97;ilto&#58;yuexn&#64;csdn&#46;net?subject=Article%20Report!!!&body=Author:amh%0D%0AURL:http://blog.csdn.net/ArticleContent.aspx?UserName=amh&Entryid=324887'>举报</a>&#124;
						<cite class="fav_csdnstylebykimi">
							<a href="JavaScript:d=document;t=d.selection?(d.selection.type!='None'?d.selection.createRange().text:''):(d.getSelection?d.getSelection():'');void(saveit=window.open('http://wz.csdn.net/storeit.aspx?t='+escape(d.title)+'&u='+escape(d.location.href)+'&c='+escape(t),'saveit','scrollbars=no,width=590,height=300,left=75,top=20,status=no,resizable=yes'));saveit.focus();" class="fav_csdnstylebykimi" title="收藏到我的网摘中，并分享给我的朋友">收藏</a>
						</cite>
					</p>
					<span id="Post.ascx_ViewPost_PreviousAndNextEntriesDown"><h3 class="pagego"><a href="/amh/archive/2005/03/20/324882.aspx">旧一篇:企业安全策略下的跨平台数据同步</a>&nbsp;|&nbsp;<a href="/amh/archive/2005/03/20/324890.aspx">新一篇:获得当前进程的列表（源码）</a></h3></span>
				</div>
			</div>
			<a name="FeedBack"></a>
			<div class="commentslist">
				<script type="text/javascript">
					var CurrentEntryId = '324887';
				</script>
				<script type="text/javascript" src="http://hi.images.csdn.net/js/blog/feedback.js?v=2009060916"></script>
				<div id="commentslist"></div>
			</div>
			<div class="spacecommment">
			</div>
			<script type="text/javascript">
			LoadFeedbackCount();
			document.write("<img src='http://counter.csdn.net/pv.aspx?id=24' border=0 width=0 height=0>");
			</script>
		</div>
	</div>
</div>
		    
<div id="pubfooter">
<dl>
	<dt></dt>
	<dd>Copyright &copy; amh</dd>
	<dd>Powered by CSDN Blog</dd>
</dl>
</div>

<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>
<script type="text/javascript" src="http://www.google-analytics.com/ga.js"></script>
<script type="text/javascript">
try {
	var pageTracker = _gat._getTracker("UA-2688088-9");
	pageTracker._trackPageview();
} catch (err) { }
</script>


	    </div>
    </div>
    <img src='/Scripts/count.aspx?blogid=36946&entryid=324887&title=将Socket应用程序从Unix向Windows移植中应注意的几点问题&url=http://www.baidu.com/baidu?wd=setsockopt+ioctl+Çø±ð&tn=monline_dg' height=0 width=0>
</body>
</html>